/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/metaMaskLogin/page"],{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22F%3A%5C%5CProjects%5C%5CLIVEPEER%5C%5CBlive%20Update%5C%5CFrontend%5C%5Cmyapp%5C%5Capp%5C%5CmetaMaskLogin%5C%5Cpage.js%22%2C%22ids%22%3A%5B%5D%7D&server=false!":
/*!***************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22F%3A%5C%5CProjects%5C%5CLIVEPEER%5C%5CBlive%20Update%5C%5CFrontend%5C%5Cmyapp%5C%5Capp%5C%5CmetaMaskLogin%5C%5Cpage.js%22%2C%22ids%22%3A%5B%5D%7D&server=false! ***!
  \***************************************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/metaMaskLogin/page.js */ \"(app-pages-browser)/./app/metaMaskLogin/page.js\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyRiUzQSU1QyU1Q1Byb2plY3RzJTVDJTVDTElWRVBFRVIlNUMlNUNCbGl2ZSUyMFVwZGF0ZSU1QyU1Q0Zyb250ZW5kJTVDJTVDbXlhcHAlNUMlNUNhcHAlNUMlNUNtZXRhTWFza0xvZ2luJTVDJTVDcGFnZS5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZzZXJ2ZXI9ZmFsc2UhIiwibWFwcGluZ3MiOiJBQUFBLGdMQUF1SCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvPzdlZmMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJGOlxcXFxQcm9qZWN0c1xcXFxMSVZFUEVFUlxcXFxCbGl2ZSBVcGRhdGVcXFxcRnJvbnRlbmRcXFxcbXlhcHBcXFxcYXBwXFxcXG1ldGFNYXNrTG9naW5cXFxccGFnZS5qc1wiKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22F%3A%5C%5CProjects%5C%5CLIVEPEER%5C%5CBlive%20Update%5C%5CFrontend%5C%5Cmyapp%5C%5Capp%5C%5CmetaMaskLogin%5C%5Cpage.js%22%2C%22ids%22%3A%5B%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@metamask/detect-provider/dist/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@metamask/detect-provider/dist/index.js ***!
  \**************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n/**\n * Returns a Promise that resolves to the value of window.ethereum if it is\n * set within the given timeout, or null.\n * The Promise will not reject, but an error will be thrown if invalid options\n * are provided.\n *\n * @param options - Options bag.\n * @param options.mustBeMetaMask - Whether to only look for MetaMask providers.\n * Default: false\n * @param options.silent - Whether to silence console errors. Does not affect\n * thrown errors. Default: false\n * @param options.timeout - Milliseconds to wait for 'ethereum#initialized' to\n * be dispatched. Default: 3000\n * @returns A Promise that resolves with the Provider if it is detected within\n * given timeout, otherwise null.\n */\nfunction detectEthereumProvider({ mustBeMetaMask = false, silent = false, timeout = 3000, } = {}) {\n    _validateInputs();\n    let handled = false;\n    return new Promise((resolve) => {\n        if (window.ethereum) {\n            handleEthereum();\n        }\n        else {\n            window.addEventListener('ethereum#initialized', handleEthereum, { once: true });\n            setTimeout(() => {\n                handleEthereum();\n            }, timeout);\n        }\n        function handleEthereum() {\n            if (handled) {\n                return;\n            }\n            handled = true;\n            window.removeEventListener('ethereum#initialized', handleEthereum);\n            const { ethereum } = window;\n            if (ethereum && (!mustBeMetaMask || ethereum.isMetaMask)) {\n                resolve(ethereum);\n            }\n            else {\n                const message = mustBeMetaMask && ethereum\n                    ? 'Non-MetaMask window.ethereum detected.'\n                    : 'Unable to detect window.ethereum.';\n                !silent && console.error('@metamask/detect-provider:', message);\n                resolve(null);\n            }\n        }\n    });\n    function _validateInputs() {\n        if (typeof mustBeMetaMask !== 'boolean') {\n            throw new Error(`@metamask/detect-provider: Expected option 'mustBeMetaMask' to be a boolean.`);\n        }\n        if (typeof silent !== 'boolean') {\n            throw new Error(`@metamask/detect-provider: Expected option 'silent' to be a boolean.`);\n        }\n        if (typeof timeout !== 'number') {\n            throw new Error(`@metamask/detect-provider: Expected option 'timeout' to be a number.`);\n        }\n    }\n}\nmodule.exports = detectEthereumProvider;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQWdCQTs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFDSCxTQUFTLHNCQUFzQixDQUErQixFQUM1RCxjQUFjLEdBQUcsS0FBSyxFQUN0QixNQUFNLEdBQUcsS0FBSyxFQUNkLE9BQU8sR0FBRyxJQUFJLEdBQ2YsR0FBRyxFQUFFO0lBRUosZUFBZSxFQUFFLENBQUM7SUFFbEIsSUFBSSxPQUFPLEdBQUcsS0FBSyxDQUFDO0lBRXBCLE9BQU8sSUFBSSxPQUFPLENBQUMsQ0FBQyxPQUFPLEVBQUUsRUFBRTtRQUM3QixJQUFLLE1BQWlCLENBQUMsUUFBUSxFQUFFO1lBRS9CLGNBQWMsRUFBRSxDQUFDO1NBRWxCO2FBQU07WUFFTCxNQUFNLENBQUMsZ0JBQWdCLENBQ3JCLHNCQUFzQixFQUN0QixjQUFjLEVBQ2QsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLENBQ2YsQ0FBQztZQUVGLFVBQVUsQ0FBQyxHQUFHLEVBQUU7Z0JBQ2QsY0FBYyxFQUFFLENBQUM7WUFDbkIsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1NBQ2I7UUFFRCxTQUFTLGNBQWM7WUFFckIsSUFBSSxPQUFPLEVBQUU7Z0JBQ1gsT0FBTzthQUNSO1lBQ0QsT0FBTyxHQUFHLElBQUksQ0FBQztZQUVmLE1BQU0sQ0FBQyxtQkFBbUIsQ0FBQyxzQkFBc0IsRUFBRSxjQUFjLENBQUMsQ0FBQztZQUVuRSxNQUFNLEVBQUUsUUFBUSxFQUFFLEdBQUcsTUFBZ0IsQ0FBQztZQUV0QyxJQUFJLFFBQVEsSUFBSSxDQUFDLENBQUMsY0FBYyxJQUFJLFFBQVEsQ0FBQyxVQUFVLENBQUMsRUFBRTtnQkFDeEQsT0FBTyxDQUFDLFFBQXdCLENBQUMsQ0FBQzthQUNuQztpQkFBTTtnQkFFTCxNQUFNLE9BQU8sR0FBRyxjQUFjLElBQUksUUFBUTtvQkFDeEMsQ0FBQyxDQUFDLHdDQUF3QztvQkFDMUMsQ0FBQyxDQUFDLG1DQUFtQyxDQUFDO2dCQUV4QyxDQUFDLE1BQU0sSUFBSSxPQUFPLENBQUMsS0FBSyxDQUFDLDRCQUE0QixFQUFFLE9BQU8sQ0FBQyxDQUFDO2dCQUNoRSxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7YUFDZjtRQUNILENBQUM7SUFDSCxDQUFDLENBQUMsQ0FBQztJQUVILFNBQVMsZUFBZTtRQUN0QixJQUFJLE9BQU8sY0FBYyxLQUFLLFNBQVMsRUFBRTtZQUN2QyxNQUFNLElBQUksS0FBSyxDQUFDLDhFQUE4RSxDQUFDLENBQUM7U0FDakc7UUFDRCxJQUFJLE9BQU8sTUFBTSxLQUFLLFNBQVMsRUFBRTtZQUMvQixNQUFNLElBQUksS0FBSyxDQUFDLHNFQUFzRSxDQUFDLENBQUM7U0FDekY7UUFDRCxJQUFJLE9BQU8sT0FBTyxLQUFLLFFBQVEsRUFBRTtZQUMvQixNQUFNLElBQUksS0FBSyxDQUFDLHNFQUFzRSxDQUFDLENBQUM7U0FDekY7SUFDSCxDQUFDO0FBQ0gsQ0FBQztBQWxGRCxpQkFBUyxzQkFBc0IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImludGVyZmFjZSBNZXRhTWFza0V0aGVyZXVtUHJvdmlkZXIge1xuICBpc01ldGFNYXNrPzogYm9vbGVhbjtcbiAgb25jZShldmVudE5hbWU6IHN0cmluZyB8IHN5bWJvbCwgbGlzdGVuZXI6ICguLi5hcmdzOiBhbnlbXSkgPT4gdm9pZCk6IHRoaXM7XG4gIG9uKGV2ZW50TmFtZTogc3RyaW5nIHwgc3ltYm9sLCBsaXN0ZW5lcjogKC4uLmFyZ3M6IGFueVtdKSA9PiB2b2lkKTogdGhpcztcbiAgb2ZmKGV2ZW50TmFtZTogc3RyaW5nIHwgc3ltYm9sLCBsaXN0ZW5lcjogKC4uLmFyZ3M6IGFueVtdKSA9PiB2b2lkKTogdGhpcztcbiAgYWRkTGlzdGVuZXIoZXZlbnROYW1lOiBzdHJpbmcgfCBzeW1ib2wsIGxpc3RlbmVyOiAoLi4uYXJnczogYW55W10pID0+IHZvaWQpOiB0aGlzO1xuICByZW1vdmVMaXN0ZW5lcihldmVudE5hbWU6IHN0cmluZyB8IHN5bWJvbCwgbGlzdGVuZXI6ICguLi5hcmdzOiBhbnlbXSkgPT4gdm9pZCk6IHRoaXM7XG4gIHJlbW92ZUFsbExpc3RlbmVycyhldmVudD86IHN0cmluZyB8IHN5bWJvbCk6IHRoaXM7XG59XG5cbmludGVyZmFjZSBXaW5kb3cge1xuICBldGhlcmV1bT86IE1ldGFNYXNrRXRoZXJldW1Qcm92aWRlcjtcbn1cblxuZXhwb3J0ID0gZGV0ZWN0RXRoZXJldW1Qcm92aWRlcjtcblxuLyoqXG4gKiBSZXR1cm5zIGEgUHJvbWlzZSB0aGF0IHJlc29sdmVzIHRvIHRoZSB2YWx1ZSBvZiB3aW5kb3cuZXRoZXJldW0gaWYgaXQgaXNcbiAqIHNldCB3aXRoaW4gdGhlIGdpdmVuIHRpbWVvdXQsIG9yIG51bGwuXG4gKiBUaGUgUHJvbWlzZSB3aWxsIG5vdCByZWplY3QsIGJ1dCBhbiBlcnJvciB3aWxsIGJlIHRocm93biBpZiBpbnZhbGlkIG9wdGlvbnNcbiAqIGFyZSBwcm92aWRlZC5cbiAqXG4gKiBAcGFyYW0gb3B0aW9ucyAtIE9wdGlvbnMgYmFnLlxuICogQHBhcmFtIG9wdGlvbnMubXVzdEJlTWV0YU1hc2sgLSBXaGV0aGVyIHRvIG9ubHkgbG9vayBmb3IgTWV0YU1hc2sgcHJvdmlkZXJzLlxuICogRGVmYXVsdDogZmFsc2VcbiAqIEBwYXJhbSBvcHRpb25zLnNpbGVudCAtIFdoZXRoZXIgdG8gc2lsZW5jZSBjb25zb2xlIGVycm9ycy4gRG9lcyBub3QgYWZmZWN0XG4gKiB0aHJvd24gZXJyb3JzLiBEZWZhdWx0OiBmYWxzZVxuICogQHBhcmFtIG9wdGlvbnMudGltZW91dCAtIE1pbGxpc2Vjb25kcyB0byB3YWl0IGZvciAnZXRoZXJldW0jaW5pdGlhbGl6ZWQnIHRvXG4gKiBiZSBkaXNwYXRjaGVkLiBEZWZhdWx0OiAzMDAwXG4gKiBAcmV0dXJucyBBIFByb21pc2UgdGhhdCByZXNvbHZlcyB3aXRoIHRoZSBQcm92aWRlciBpZiBpdCBpcyBkZXRlY3RlZCB3aXRoaW5cbiAqIGdpdmVuIHRpbWVvdXQsIG90aGVyd2lzZSBudWxsLlxuICovXG5mdW5jdGlvbiBkZXRlY3RFdGhlcmV1bVByb3ZpZGVyPFQgPSBNZXRhTWFza0V0aGVyZXVtUHJvdmlkZXI+KHtcbiAgbXVzdEJlTWV0YU1hc2sgPSBmYWxzZSxcbiAgc2lsZW50ID0gZmFsc2UsXG4gIHRpbWVvdXQgPSAzMDAwLFxufSA9IHt9KTogUHJvbWlzZTxUIHwgbnVsbD4ge1xuXG4gIF92YWxpZGF0ZUlucHV0cygpO1xuXG4gIGxldCBoYW5kbGVkID0gZmFsc2U7XG5cbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XG4gICAgaWYgKCh3aW5kb3cgYXMgV2luZG93KS5ldGhlcmV1bSkge1xuXG4gICAgICBoYW5kbGVFdGhlcmV1bSgpO1xuXG4gICAgfSBlbHNlIHtcblxuICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXG4gICAgICAgICdldGhlcmV1bSNpbml0aWFsaXplZCcsXG4gICAgICAgIGhhbmRsZUV0aGVyZXVtLFxuICAgICAgICB7IG9uY2U6IHRydWUgfSxcbiAgICAgICk7XG5cbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICBoYW5kbGVFdGhlcmV1bSgpO1xuICAgICAgfSwgdGltZW91dCk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaGFuZGxlRXRoZXJldW0oKSB7XG5cbiAgICAgIGlmIChoYW5kbGVkKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGhhbmRsZWQgPSB0cnVlO1xuXG4gICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcignZXRoZXJldW0jaW5pdGlhbGl6ZWQnLCBoYW5kbGVFdGhlcmV1bSk7XG5cbiAgICAgIGNvbnN0IHsgZXRoZXJldW0gfSA9IHdpbmRvdyBhcyBXaW5kb3c7XG5cbiAgICAgIGlmIChldGhlcmV1bSAmJiAoIW11c3RCZU1ldGFNYXNrIHx8IGV0aGVyZXVtLmlzTWV0YU1hc2spKSB7XG4gICAgICAgIHJlc29sdmUoZXRoZXJldW0gYXMgdW5rbm93biBhcyBUKTtcbiAgICAgIH0gZWxzZSB7XG5cbiAgICAgICAgY29uc3QgbWVzc2FnZSA9IG11c3RCZU1ldGFNYXNrICYmIGV0aGVyZXVtXG4gICAgICAgICAgPyAnTm9uLU1ldGFNYXNrIHdpbmRvdy5ldGhlcmV1bSBkZXRlY3RlZC4nXG4gICAgICAgICAgOiAnVW5hYmxlIHRvIGRldGVjdCB3aW5kb3cuZXRoZXJldW0uJztcblxuICAgICAgICAhc2lsZW50ICYmIGNvbnNvbGUuZXJyb3IoJ0BtZXRhbWFzay9kZXRlY3QtcHJvdmlkZXI6JywgbWVzc2FnZSk7XG4gICAgICAgIHJlc29sdmUobnVsbCk7XG4gICAgICB9XG4gICAgfVxuICB9KTtcblxuICBmdW5jdGlvbiBfdmFsaWRhdGVJbnB1dHMoKSB7XG4gICAgaWYgKHR5cGVvZiBtdXN0QmVNZXRhTWFzayAhPT0gJ2Jvb2xlYW4nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYEBtZXRhbWFzay9kZXRlY3QtcHJvdmlkZXI6IEV4cGVjdGVkIG9wdGlvbiAnbXVzdEJlTWV0YU1hc2snIHRvIGJlIGEgYm9vbGVhbi5gKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBzaWxlbnQgIT09ICdib29sZWFuJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBAbWV0YW1hc2svZGV0ZWN0LXByb3ZpZGVyOiBFeHBlY3RlZCBvcHRpb24gJ3NpbGVudCcgdG8gYmUgYSBib29sZWFuLmApO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHRpbWVvdXQgIT09ICdudW1iZXInKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYEBtZXRhbWFzay9kZXRlY3QtcHJvdmlkZXI6IEV4cGVjdGVkIG9wdGlvbiAndGltZW91dCcgdG8gYmUgYSBudW1iZXIuYCk7XG4gICAgfVxuICB9XG59XG4iXX0=//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@metamask/detect-provider/dist/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/metaMaskLogin/page.js":
/*!***********************************!*\
  !*** ./app/metaMaskLogin/page.js ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ MetaMaskLoginPage; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_MetaMaskLogin__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../components/MetaMaskLogin */ \"(app-pages-browser)/./components/MetaMaskLogin.js\");\n// app/metaMaskLogin/page.js\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\nfunction MetaMaskLoginPage() {\n    _s();\n    const [isClient, setIsClient] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        setIsClient(true);\n    }, []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"min-h-screen flex items-center justify-center bg-gray-100\",\n        children: isClient && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_MetaMaskLogin__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {}, void 0, false, {\n            fileName: \"F:\\\\Projects\\\\LIVEPEER\\\\Blive Update\\\\Frontend\\\\myapp\\\\app\\\\metaMaskLogin\\\\page.js\",\n            lineNumber: 16,\n            columnNumber: 20\n        }, this)\n    }, void 0, false, {\n        fileName: \"F:\\\\Projects\\\\LIVEPEER\\\\Blive Update\\\\Frontend\\\\myapp\\\\app\\\\metaMaskLogin\\\\page.js\",\n        lineNumber: 15,\n        columnNumber: 5\n    }, this);\n}\n_s(MetaMaskLoginPage, \"k460N28PNzD7zo1YW47Q9UigQis=\");\n_c = MetaMaskLoginPage;\nvar _c;\n$RefreshReg$(_c, \"MetaMaskLoginPage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9tZXRhTWFza0xvZ2luL3BhZ2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSw0QkFBNEI7OztBQUdnQjtBQUNlO0FBRTVDLFNBQVNHOztJQUN0QixNQUFNLENBQUNDLFVBQVVDLFlBQVksR0FBR0osK0NBQVFBLENBQUM7SUFFekNELGdEQUFTQSxDQUFDO1FBQ1JLLFlBQVk7SUFDZCxHQUFHLEVBQUU7SUFFTCxxQkFDRSw4REFBQ0M7UUFBSUMsV0FBVTtrQkFDWkgsMEJBQVksOERBQUNGLGlFQUFhQTs7Ozs7Ozs7OztBQUdqQztHQVp3QkM7S0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vYXBwL21ldGFNYXNrTG9naW4vcGFnZS5qcz9mNGYzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGFwcC9tZXRhTWFza0xvZ2luL3BhZ2UuanNcblxuXCJ1c2UgY2xpZW50XCI7XG5pbXBvcnQgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IE1ldGFNYXNrTG9naW4gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9NZXRhTWFza0xvZ2luJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTWV0YU1hc2tMb2dpblBhZ2UoKSB7XG4gIGNvbnN0IFtpc0NsaWVudCwgc2V0SXNDbGllbnRdID0gdXNlU3RhdGUoZmFsc2UpO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgc2V0SXNDbGllbnQodHJ1ZSk7XG4gIH0sIFtdKTtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwibWluLWgtc2NyZWVuIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIGJnLWdyYXktMTAwXCI+XG4gICAgICB7aXNDbGllbnQgJiYgPE1ldGFNYXNrTG9naW4gLz59XG4gICAgPC9kaXY+XG4gICk7XG59XG5cblxuXG5cblxuXG5cblxuXG5cbiJdLCJuYW1lcyI6WyJ1c2VFZmZlY3QiLCJ1c2VTdGF0ZSIsIk1ldGFNYXNrTG9naW4iLCJNZXRhTWFza0xvZ2luUGFnZSIsImlzQ2xpZW50Iiwic2V0SXNDbGllbnQiLCJkaXYiLCJjbGFzc05hbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/metaMaskLogin/page.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/MetaMaskLogin.js":
/*!*************************************!*\
  !*** ./components/MetaMaskLogin.js ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ MetaMaskLogin; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _metamask_detect_provider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @metamask/detect-provider */ \"(app-pages-browser)/./node_modules/@metamask/detect-provider/dist/index.js\");\n/* harmony import */ var _metamask_detect_provider__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_metamask_detect_provider__WEBPACK_IMPORTED_MODULE_2__);\n\nvar _s = $RefreshSig$();\n\n\nfunction MetaMaskLogin() {\n    _s();\n    const [userName, setUserName] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [emailId, setEmailId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\"); // New state for email\n    const [fullName, setFullName] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\"); // New state for full name\n    const [address, setAddress] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [provider, setProvider] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [errorMessage, setErrorMessage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        async function initializeProvider() {\n            const detectedProvider = await _metamask_detect_provider__WEBPACK_IMPORTED_MODULE_2___default()();\n            if (detectedProvider) {\n                /* eslint-disable */ console.log(...oo_oo(\"1329226548_16_8_16_68_4\", \"MetaMask provider detected:\", detectedProvider));\n                setProvider(detectedProvider);\n            } else {\n                console.error(\"MetaMask not detected\");\n            }\n        }\n        initializeProvider();\n    }, []);\n    const handleLogin = async ()=>{\n        if (provider) {\n            if (!userName.trim() || !emailId.trim() || !fullName.trim()) {\n                setErrorMessage(\"All fields are required\");\n                return;\n            }\n            try {\n                const accounts = await provider.request({\n                    method: \"eth_requestAccounts\"\n                });\n                const userAddress = accounts[0];\n                setAddress(userAddress);\n                setErrorMessage(\"\"); // Clear any previous error messages\n                /* eslint-disable */ console.log(...oo_oo(\"1329226548_38_8_38_63_4\", \"Connected MetaMask address:\", userAddress));\n                // Save user data to MongoDB\n                const response = await fetch(\"/api/register\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        userAddress,\n                        userName,\n                        emailId,\n                        fullName\n                    })\n                });\n                if (response.ok) {\n                    const user = await response.json();\n                    /* eslint-disable */ console.log(...oo_oo(\"1329226548_49_10_49_58_4\", \"User registered in MongoDB:\", user));\n                } else {\n                    const errorText = await response.text();\n                    console.error(\"Failed to register user in MongoDB:\", errorText);\n                    setErrorMessage(\"Failed to register user\");\n                }\n            } catch (error) {\n                console.error(\"Error connecting to MetaMask:\", error);\n                setErrorMessage(\"Error connecting to MetaMask\");\n            }\n        } else {\n            console.error(\"MetaMask is not installed or Ethereum provider is not available\");\n            setErrorMessage(\"MetaMask is not installed or Ethereum provider is not available\");\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"flex flex-col items-center space-y-4\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                type: \"text\",\n                placeholder: \"Enter your full name\",\n                value: fullName,\n                onChange: (e)=>setFullName(e.target.value),\n                className: \"p-2 border border-gray-300 rounded\"\n            }, void 0, false, {\n                fileName: \"F:\\\\Projects\\\\LIVEPEER\\\\Blive Update\\\\Frontend\\\\myapp\\\\components\\\\MetaMaskLogin.js\",\n                lineNumber: 67,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                type: \"text\",\n                placeholder: \"Enter your email ID\",\n                value: emailId,\n                onChange: (e)=>setEmailId(e.target.value),\n                className: \"p-2 border border-gray-300 rounded\"\n            }, void 0, false, {\n                fileName: \"F:\\\\Projects\\\\LIVEPEER\\\\Blive Update\\\\Frontend\\\\myapp\\\\components\\\\MetaMaskLogin.js\",\n                lineNumber: 74,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                type: \"text\",\n                placeholder: \"Enter your user name\",\n                value: userName,\n                onChange: (e)=>setUserName(e.target.value),\n                className: \"p-2 border border-gray-300 rounded\"\n            }, void 0, false, {\n                fileName: \"F:\\\\Projects\\\\LIVEPEER\\\\Blive Update\\\\Frontend\\\\myapp\\\\components\\\\MetaMaskLogin.js\",\n                lineNumber: 81,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                onClick: handleLogin,\n                className: \"p-2 bg-blue-500 text-white rounded\",\n                children: \"Login with MetaMask\"\n            }, void 0, false, {\n                fileName: \"F:\\\\Projects\\\\LIVEPEER\\\\Blive Update\\\\Frontend\\\\myapp\\\\components\\\\MetaMaskLogin.js\",\n                lineNumber: 88,\n                columnNumber: 7\n            }, this),\n            address && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                children: [\n                    \"Address: \",\n                    address\n                ]\n            }, void 0, true, {\n                fileName: \"F:\\\\Projects\\\\LIVEPEER\\\\Blive Update\\\\Frontend\\\\myapp\\\\components\\\\MetaMaskLogin.js\",\n                lineNumber: 94,\n                columnNumber: 19\n            }, this),\n            errorMessage && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                className: \"text-red-500\",\n                children: errorMessage\n            }, void 0, false, {\n                fileName: \"F:\\\\Projects\\\\LIVEPEER\\\\Blive Update\\\\Frontend\\\\myapp\\\\components\\\\MetaMaskLogin.js\",\n                lineNumber: 95,\n                columnNumber: 24\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"F:\\\\Projects\\\\LIVEPEER\\\\Blive Update\\\\Frontend\\\\myapp\\\\components\\\\MetaMaskLogin.js\",\n        lineNumber: 66,\n        columnNumber: 5\n    }, this);\n} /* eslint-disable */ \n_s(MetaMaskLogin, \"85m/xzYgQQz5h3TG4U17azZtW3A=\");\n_c = MetaMaskLogin;\n/* istanbul ignore next */ /* c8 ignore start */ ;\nfunction oo_cm() {\n    try {\n        return (0, eval)(\"globalThis._console_ninja\") || (0, eval)(\"/* https://github.com/wallabyjs/console-ninja#how-does-it-work */'use strict';var _0x9d4878=_0x15be;(function(_0x304bbc,_0x56fccb){var _0x1fc098=_0x15be,_0x56d506=_0x304bbc();while(!![]){try{var _0x253c2e=-parseInt(_0x1fc098(0x1da))/0x1+-parseInt(_0x1fc098(0x178))/0x2+parseInt(_0x1fc098(0x17b))/0x3*(-parseInt(_0x1fc098(0x221))/0x4)+parseInt(_0x1fc098(0x163))/0x5+-parseInt(_0x1fc098(0x1b2))/0x6+-parseInt(_0x1fc098(0x1e9))/0x7+parseInt(_0x1fc098(0x194))/0x8;if(_0x253c2e===_0x56fccb)break;else _0x56d506['push'](_0x56d506['shift']());}catch(_0x1e0804){_0x56d506['push'](_0x56d506['shift']());}}}(_0x24ce,0x6af45));var K=Object[_0x9d4878(0x21f)],Q=Object[_0x9d4878(0x1b5)],G=Object['getOwnPropertyDescriptor'],ee=Object[_0x9d4878(0x171)],te=Object[_0x9d4878(0x203)],ne=Object[_0x9d4878(0x1d8)][_0x9d4878(0x24e)],re=(_0x9c95f6,_0x4b6ec2,_0x18d098,_0x16aee3)=>{var _0x40d555=_0x9d4878;if(_0x4b6ec2&&typeof _0x4b6ec2==_0x40d555(0x187)||typeof _0x4b6ec2==_0x40d555(0x1bf)){for(let _0x463530 of ee(_0x4b6ec2))!ne[_0x40d555(0x1dc)](_0x9c95f6,_0x463530)&&_0x463530!==_0x18d098&&Q(_0x9c95f6,_0x463530,{'get':()=>_0x4b6ec2[_0x463530],'enumerable':!(_0x16aee3=G(_0x4b6ec2,_0x463530))||_0x16aee3[_0x40d555(0x164)]});}return _0x9c95f6;},V=(_0x8cf4ee,_0x28e58c,_0x439a7a)=>(_0x439a7a=_0x8cf4ee!=null?K(te(_0x8cf4ee)):{},re(_0x28e58c||!_0x8cf4ee||!_0x8cf4ee[_0x9d4878(0x209)]?Q(_0x439a7a,_0x9d4878(0x231),{'value':_0x8cf4ee,'enumerable':!0x0}):_0x439a7a,_0x8cf4ee)),x=class{constructor(_0x3a27e7,_0x216271,_0x32d94b,_0xf3b626,_0x57a308,_0x195892){var _0x39f1ef=_0x9d4878,_0x41b545,_0x443b9c,_0x4fd90b,_0x3836fb;this[_0x39f1ef(0x17a)]=_0x3a27e7,this[_0x39f1ef(0x20b)]=_0x216271,this[_0x39f1ef(0x15f)]=_0x32d94b,this['nodeModules']=_0xf3b626,this[_0x39f1ef(0x23d)]=_0x57a308,this[_0x39f1ef(0x213)]=_0x195892,this[_0x39f1ef(0x245)]=!0x0,this[_0x39f1ef(0x22d)]=!0x0,this[_0x39f1ef(0x1b0)]=!0x1,this[_0x39f1ef(0x23f)]=!0x1,this[_0x39f1ef(0x23a)]=((_0x443b9c=(_0x41b545=_0x3a27e7[_0x39f1ef(0x181)])==null?void 0x0:_0x41b545['env'])==null?void 0x0:_0x443b9c[_0x39f1ef(0x16c)])===_0x39f1ef(0x1ac),this[_0x39f1ef(0x21b)]=!((_0x3836fb=(_0x4fd90b=this[_0x39f1ef(0x17a)]['process'])==null?void 0x0:_0x4fd90b[_0x39f1ef(0x17d)])!=null&&_0x3836fb['node'])&&!this[_0x39f1ef(0x23a)],this[_0x39f1ef(0x232)]=null,this[_0x39f1ef(0x1c0)]=0x0,this[_0x39f1ef(0x196)]=0x14,this[_0x39f1ef(0x17e)]='https://tinyurl.com/37x8b79t',this[_0x39f1ef(0x1d3)]=(this[_0x39f1ef(0x21b)]?_0x39f1ef(0x23e):_0x39f1ef(0x16b))+this['_webSocketErrorDocsLink'];}async[_0x9d4878(0x1bc)](){var _0xfaf807=_0x9d4878,_0x53cd7c,_0x5d7051;if(this['_WebSocketClass'])return this[_0xfaf807(0x232)];let _0x556a25;if(this['_inBrowser']||this[_0xfaf807(0x23a)])_0x556a25=this[_0xfaf807(0x17a)][_0xfaf807(0x1a9)];else{if((_0x53cd7c=this[_0xfaf807(0x17a)][_0xfaf807(0x181)])!=null&&_0x53cd7c['_WebSocket'])_0x556a25=(_0x5d7051=this[_0xfaf807(0x17a)][_0xfaf807(0x181)])==null?void 0x0:_0x5d7051[_0xfaf807(0x1a3)];else try{let _0x4878b9=await import(_0xfaf807(0x1dd));_0x556a25=(await import((await import(_0xfaf807(0x243)))[_0xfaf807(0x180)](_0x4878b9['join'](this[_0xfaf807(0x1eb)],'ws/index.js'))[_0xfaf807(0x184)]()))[_0xfaf807(0x231)];}catch{try{_0x556a25=require(require(_0xfaf807(0x1dd))[_0xfaf807(0x18f)](this['nodeModules'],'ws'));}catch{throw new Error(_0xfaf807(0x1d6));}}}return this[_0xfaf807(0x232)]=_0x556a25,_0x556a25;}[_0x9d4878(0x19e)](){var _0x3e0c36=_0x9d4878;this[_0x3e0c36(0x23f)]||this['_connected']||this[_0x3e0c36(0x1c0)]>=this[_0x3e0c36(0x196)]||(this[_0x3e0c36(0x22d)]=!0x1,this['_connecting']=!0x0,this[_0x3e0c36(0x1c0)]++,this[_0x3e0c36(0x16d)]=new Promise((_0x540491,_0x5a4bdf)=>{var _0x1aade3=_0x3e0c36;this[_0x1aade3(0x1bc)]()[_0x1aade3(0x218)](_0x2ac079=>{var _0xd2a718=_0x1aade3;let _0x7e66a=new _0x2ac079(_0xd2a718(0x1cf)+(!this['_inBrowser']&&this[_0xd2a718(0x23d)]?_0xd2a718(0x1d1):this[_0xd2a718(0x20b)])+':'+this[_0xd2a718(0x15f)]);_0x7e66a[_0xd2a718(0x1b1)]=()=>{var _0x13fd65=_0xd2a718;this[_0x13fd65(0x245)]=!0x1,this[_0x13fd65(0x20e)](_0x7e66a),this[_0x13fd65(0x20a)](),_0x5a4bdf(new Error(_0x13fd65(0x1ce)));},_0x7e66a[_0xd2a718(0x1f0)]=()=>{var _0x4ef9cd=_0xd2a718;this[_0x4ef9cd(0x21b)]||_0x7e66a['_socket']&&_0x7e66a['_socket']['unref']&&_0x7e66a[_0x4ef9cd(0x1aa)][_0x4ef9cd(0x16f)](),_0x540491(_0x7e66a);},_0x7e66a[_0xd2a718(0x22e)]=()=>{var _0x3479c5=_0xd2a718;this[_0x3479c5(0x22d)]=!0x0,this['_disposeWebsocket'](_0x7e66a),this[_0x3479c5(0x20a)]();},_0x7e66a[_0xd2a718(0x1b6)]=_0x42ce35=>{var _0x485125=_0xd2a718;try{if(!(_0x42ce35!=null&&_0x42ce35['data'])||!this['eventReceivedCallback'])return;let _0x5b913c=JSON[_0x485125(0x190)](_0x42ce35[_0x485125(0x1d9)]);this[_0x485125(0x213)](_0x5b913c['method'],_0x5b913c[_0x485125(0x246)],this[_0x485125(0x17a)],this[_0x485125(0x21b)]);}catch{}};})[_0x1aade3(0x218)](_0x781906=>(this[_0x1aade3(0x1b0)]=!0x0,this[_0x1aade3(0x23f)]=!0x1,this[_0x1aade3(0x22d)]=!0x1,this['_allowedToSend']=!0x0,this['_connectAttemptCount']=0x0,_0x781906))[_0x1aade3(0x1b7)](_0x41c914=>(this[_0x1aade3(0x1b0)]=!0x1,this[_0x1aade3(0x23f)]=!0x1,console[_0x1aade3(0x241)]('logger\\\\x20failed\\\\x20to\\\\x20connect\\\\x20to\\\\x20host,\\\\x20see\\\\x20'+this[_0x1aade3(0x17e)]),_0x5a4bdf(new Error(_0x1aade3(0x1de)+(_0x41c914&&_0x41c914[_0x1aade3(0x188)])))));}));}['_disposeWebsocket'](_0x38b3c2){var _0x188157=_0x9d4878;this['_connected']=!0x1,this[_0x188157(0x23f)]=!0x1;try{_0x38b3c2[_0x188157(0x22e)]=null,_0x38b3c2['onerror']=null,_0x38b3c2[_0x188157(0x1f0)]=null;}catch{}try{_0x38b3c2[_0x188157(0x1b4)]<0x2&&_0x38b3c2[_0x188157(0x23b)]();}catch{}}['_attemptToReconnectShortly'](){var _0x53e85b=_0x9d4878;clearTimeout(this['_reconnectTimeout']),!(this[_0x53e85b(0x1c0)]>=this[_0x53e85b(0x196)])&&(this[_0x53e85b(0x226)]=setTimeout(()=>{var _0x50144c=_0x53e85b,_0x306fb7;this['_connected']||this[_0x50144c(0x23f)]||(this[_0x50144c(0x19e)](),(_0x306fb7=this[_0x50144c(0x16d)])==null||_0x306fb7[_0x50144c(0x1b7)](()=>this['_attemptToReconnectShortly']()));},0x1f4),this[_0x53e85b(0x226)][_0x53e85b(0x16f)]&&this['_reconnectTimeout'][_0x53e85b(0x16f)]());}async[_0x9d4878(0x242)](_0x103649){var _0x585e32=_0x9d4878;try{if(!this[_0x585e32(0x245)])return;this[_0x585e32(0x22d)]&&this[_0x585e32(0x19e)](),(await this[_0x585e32(0x16d)])['send'](JSON[_0x585e32(0x165)](_0x103649));}catch(_0x525614){console[_0x585e32(0x241)](this[_0x585e32(0x1d3)]+':\\\\x20'+(_0x525614&&_0x525614['message'])),this['_allowedToSend']=!0x1,this[_0x585e32(0x20a)]();}}};function q(_0x4466d9,_0xde5c6a,_0xa9d58f,_0xe4949f,_0xa71966,_0x5efce6,_0x15571f,_0x56428a=ie){var _0x78d367=_0x9d4878;let _0x351063=_0xa9d58f[_0x78d367(0x1e7)](',')[_0x78d367(0x222)](_0x5407bd=>{var _0x31fedb=_0x78d367,_0x277590,_0x57f609,_0x481a6d,_0x4a3491;try{if(!_0x4466d9[_0x31fedb(0x247)]){let _0xffbef2=((_0x57f609=(_0x277590=_0x4466d9[_0x31fedb(0x181)])==null?void 0x0:_0x277590['versions'])==null?void 0x0:_0x57f609[_0x31fedb(0x199)])||((_0x4a3491=(_0x481a6d=_0x4466d9['process'])==null?void 0x0:_0x481a6d[_0x31fedb(0x15d)])==null?void 0x0:_0x4a3491[_0x31fedb(0x16c)])==='edge';(_0xa71966==='next.js'||_0xa71966===_0x31fedb(0x1b9)||_0xa71966==='astro'||_0xa71966===_0x31fedb(0x1d2))&&(_0xa71966+=_0xffbef2?'\\\\x20server':_0x31fedb(0x173)),_0x4466d9['_console_ninja_session']={'id':+new Date(),'tool':_0xa71966},_0x15571f&&_0xa71966&&!_0xffbef2&&console[_0x31fedb(0x1a6)](_0x31fedb(0x20f)+(_0xa71966[_0x31fedb(0x16a)](0x0)[_0x31fedb(0x200)]()+_0xa71966[_0x31fedb(0x1db)](0x1))+',',_0x31fedb(0x19f),_0x31fedb(0x19c));}let _0x4a11ca=new x(_0x4466d9,_0xde5c6a,_0x5407bd,_0xe4949f,_0x5efce6,_0x56428a);return _0x4a11ca['send'][_0x31fedb(0x1e4)](_0x4a11ca);}catch(_0x1a0989){return console['warn'](_0x31fedb(0x17c),_0x1a0989&&_0x1a0989[_0x31fedb(0x188)]),()=>{};}});return _0x203729=>_0x351063[_0x78d367(0x1b3)](_0x83d83a=>_0x83d83a(_0x203729));}function _0x24ce(){var _0x3f631b=['replace','NEGATIVE_INFINITY','object','message','unknown','_getOwnPropertyNames','location','isExpressionToEvaluate','string','capped','join','parse','sort','valueOf','props','17368712QqKbwK','allStrLength','_maxConnectAttemptCount','indexOf','_blacklistedProperty','node','type','Error','see\\\\x20https://tinyurl.com/2vt8jxzw\\\\x20for\\\\x20more\\\\x20info.','resolveGetters','_connectToHostNow','background:\\\\x20rgb(30,30,30);\\\\x20color:\\\\x20rgb(255,213,92)','_propertyName','fromCharCode','getOwnPropertySymbols','_WebSocket','_setNodeLabel','_isArray','log','startsWith','strLength','WebSocket','_socket','level','edge','null','_getOwnPropertyDescriptor','performance','_connected','onerror','3707586fSuNBI','forEach','readyState','defineProperty','onmessage','catch','autoExpandPreviousObjects','remix','_isPrimitiveWrapperType','push','getWebSocketClass','autoExpandLimit','reduceLimits','function','_connectAttemptCount','59302','array','slice','RegExp','_property','hrtime','name','autoExpand','_processTreeNodeResult','','negativeZero','some','stackTraceLimit','logger\\\\x20websocket\\\\x20error','ws://','Number','gateway.docker.internal','angular','_sendErrorMessage','_addFunctionsNode','hits','failed\\\\x20to\\\\x20find\\\\x20and\\\\x20load\\\\x20WebSocket','next.js','prototype','data','366107FyFwER','substr','call','path','failed\\\\x20to\\\\x20connect\\\\x20to\\\\x20host:\\\\x20','_treeNodePropertiesAfterFullValue','_setNodeExpressionPath','stack','_setNodeExpandableState','test','bind','1','console','split','...','3620428edXFBO','Boolean','nodeModules','index','_isMap','set','_console_ninja','onopen','_addProperty','get','_regExpToString','_hasMapOnItsPath','_objectToString','constructor','disabledLog','undefined','_dateToString','cappedElements','next.js','cappedProps','String','negativeInfinity','isArray','toUpperCase','match','bigint','getPrototypeOf','serialize',\\\"c:\\\\\\\\Users\\\\\\\\esska\\\\\\\\.vscode\\\\\\\\extensions\\\\\\\\wallabyjs.console-ninja-1.0.350\\\\\\\\node_modules\\\",'includes','_p_name','funcName','__es'+'Module','_attemptToReconnectShortly','host','elapsed','_setNodeId','_disposeWebsocket','%c\\\\x20Console\\\\x20Ninja\\\\x20extension\\\\x20is\\\\x20connected\\\\x20to\\\\x20','_p_length','autoExpandMaxDepth','value','eventReceivedCallback','_keyStrRegExp','_numberRegExp','_sortProps','127.0.0.1','then','_isPrimitiveType','_Symbol','_inBrowser','reload','_treeNodePropertiesBeforeFullValue','_additionalMetadata','create','Set','2260Tgeihl','map','[object\\\\x20Set]','_isSet','toLowerCase','_reconnectTimeout','trace','totalStrLength','expId',[\\\"localhost\\\",\\\"127.0.0.1\\\",\\\"example.cypress.io\\\",\\\"NZXT\\\",\\\"192.168.1.5\\\",\\\"172.19.176.1\\\"],'_setNodeQueryPath','Map','_allowedToConnectOnSend','onclose','now','current','default','_WebSocketClass','1723983797998','root_exp','sortProps','_capIfString','1.0.0','expressionsToEvaluate','_isNegativeZero','_inNextEdge','close','count','dockerizedApp','Console\\\\x20Ninja\\\\x20failed\\\\x20to\\\\x20send\\\\x20logs,\\\\x20refreshing\\\\x20the\\\\x20page\\\\x20may\\\\x20help;\\\\x20also\\\\x20see\\\\x20','_connecting','getter','warn','send','url','parent','_allowedToSend','args','_console_ninja_session','perf_hooks','[object\\\\x20Array]','[object\\\\x20BigInt]','_addLoadNode','unshift','concat','hasOwnProperty','error','_type','disabledTrace','HTMLAllCollection','timeStamp','_p_','_hasSetOnItsPath','length','_addObjectProperty','env','','port','depth','_getOwnPropertySymbols','elements','620905WoekAX','enumerable','stringify','symbol','time','_cleanNode','nan','charAt','Console\\\\x20Ninja\\\\x20failed\\\\x20to\\\\x20send\\\\x20logs,\\\\x20restarting\\\\x20the\\\\x20process\\\\x20may\\\\x20help;\\\\x20also\\\\x20see\\\\x20','NEXT_RUNTIME','_ws','autoExpandPropertyCount','unref','Buffer','getOwnPropertyNames','_consoleNinjaAllowedToStart','\\\\x20browser','_HTMLAllCollection','origin','[object\\\\x20Map]','root_exp_id','461026AWBBRQ','setter','global','666kZsIdU','logger\\\\x20failed\\\\x20to\\\\x20connect\\\\x20to\\\\x20host','versions','_webSocketErrorDocsLink','number','pathToFileURL','process','noFunctions','_undefined','toString'];_0x24ce=function(){return _0x3f631b;};return _0x24ce();}function ie(_0x1d638b,_0x2edb8c,_0x22cf51,_0x407e15){var _0x161e56=_0x9d4878;_0x407e15&&_0x1d638b===_0x161e56(0x21c)&&_0x22cf51[_0x161e56(0x18b)]['reload']();}function b(_0x429c71){var _0x5e6fc8=_0x9d4878,_0x51a911,_0x3b9527;let _0xf914c5=function(_0x5c1465,_0x566903){return _0x566903-_0x5c1465;},_0x1b505d;if(_0x429c71[_0x5e6fc8(0x1af)])_0x1b505d=function(){var _0x195cd0=_0x5e6fc8;return _0x429c71[_0x195cd0(0x1af)][_0x195cd0(0x22f)]();};else{if(_0x429c71['process']&&_0x429c71[_0x5e6fc8(0x181)][_0x5e6fc8(0x1c6)]&&((_0x3b9527=(_0x51a911=_0x429c71[_0x5e6fc8(0x181)])==null?void 0x0:_0x51a911['env'])==null?void 0x0:_0x3b9527[_0x5e6fc8(0x16c)])!=='edge')_0x1b505d=function(){var _0x52094f=_0x5e6fc8;return _0x429c71[_0x52094f(0x181)]['hrtime']();},_0xf914c5=function(_0x447e75,_0x323511){return 0x3e8*(_0x323511[0x0]-_0x447e75[0x0])+(_0x323511[0x1]-_0x447e75[0x1])/0xf4240;};else try{let {performance:_0x40477d}=require(_0x5e6fc8(0x248));_0x1b505d=function(){var _0x579df2=_0x5e6fc8;return _0x40477d[_0x579df2(0x22f)]();};}catch{_0x1b505d=function(){return+new Date();};}}return{'elapsed':_0xf914c5,'timeStamp':_0x1b505d,'now':()=>Date[_0x5e6fc8(0x22f)]()};}function _0x15be(_0x4754f7,_0x27dabf){var _0x24ce88=_0x24ce();return _0x15be=function(_0x15be48,_0x3c4890){_0x15be48=_0x15be48-0x15d;var _0x48f8e0=_0x24ce88[_0x15be48];return _0x48f8e0;},_0x15be(_0x4754f7,_0x27dabf);}function H(_0x50b099,_0x9c6c47,_0x2e54ba){var _0x1a99d0=_0x9d4878,_0x28c7e0,_0x486d66,_0x17a7dd,_0xc6d165,_0x300186;if(_0x50b099[_0x1a99d0(0x172)]!==void 0x0)return _0x50b099[_0x1a99d0(0x172)];let _0x11c863=((_0x486d66=(_0x28c7e0=_0x50b099[_0x1a99d0(0x181)])==null?void 0x0:_0x28c7e0['versions'])==null?void 0x0:_0x486d66[_0x1a99d0(0x199)])||((_0xc6d165=(_0x17a7dd=_0x50b099[_0x1a99d0(0x181)])==null?void 0x0:_0x17a7dd['env'])==null?void 0x0:_0xc6d165[_0x1a99d0(0x16c)])===_0x1a99d0(0x1ac);function _0x383826(_0x1ea52f){var _0x5ac107=_0x1a99d0;if(_0x1ea52f[_0x5ac107(0x1a7)]('/')&&_0x1ea52f['endsWith']('/')){let _0x2841b0=new RegExp(_0x1ea52f[_0x5ac107(0x1c3)](0x1,-0x1));return _0x3ab2ec=>_0x2841b0[_0x5ac107(0x1e3)](_0x3ab2ec);}else{if(_0x1ea52f[_0x5ac107(0x206)]('*')||_0x1ea52f['includes']('?')){let _0x1b5793=new RegExp('^'+_0x1ea52f[_0x5ac107(0x185)](/\\\\./g,String[_0x5ac107(0x1a1)](0x5c)+'.')['replace'](/\\\\*/g,'.*')[_0x5ac107(0x185)](/\\\\?/g,'.')+String[_0x5ac107(0x1a1)](0x24));return _0x25cfaa=>_0x1b5793[_0x5ac107(0x1e3)](_0x25cfaa);}else return _0x14b89c=>_0x14b89c===_0x1ea52f;}}let _0x52fa04=_0x9c6c47[_0x1a99d0(0x222)](_0x383826);return _0x50b099[_0x1a99d0(0x172)]=_0x11c863||!_0x9c6c47,!_0x50b099['_consoleNinjaAllowedToStart']&&((_0x300186=_0x50b099[_0x1a99d0(0x18b)])==null?void 0x0:_0x300186['hostname'])&&(_0x50b099[_0x1a99d0(0x172)]=_0x52fa04[_0x1a99d0(0x1cc)](_0x5832cf=>_0x5832cf(_0x50b099['location']['hostname']))),_0x50b099[_0x1a99d0(0x172)];}function X(_0x379972,_0x469026,_0x32f390,_0x496bd9){var _0x48a4d6=_0x9d4878;_0x379972=_0x379972,_0x469026=_0x469026,_0x32f390=_0x32f390,_0x496bd9=_0x496bd9;let _0x374e12=b(_0x379972),_0x267971=_0x374e12[_0x48a4d6(0x20c)],_0x29b2e0=_0x374e12['timeStamp'];class _0x3cd7a9{constructor(){var _0x77679=_0x48a4d6;this[_0x77679(0x214)]=/^(?!(?:do|if|in|for|let|new|try|var|case|else|enum|eval|false|null|this|true|void|with|break|catch|class|const|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$)[_$a-zA-Z\\\\xA0-\\\\uFFFF][_$a-zA-Z0-9\\\\xA0-\\\\uFFFF]*$/,this[_0x77679(0x215)]=/^(0|[1-9][0-9]*)$/,this['_quotedRegExp']=/'([^\\\\\\\\']|\\\\\\\\')*'/,this[_0x77679(0x183)]=_0x379972[_0x77679(0x1f8)],this[_0x77679(0x174)]=_0x379972[_0x77679(0x252)],this[_0x77679(0x1ae)]=Object['getOwnPropertyDescriptor'],this[_0x77679(0x18a)]=Object[_0x77679(0x171)],this[_0x77679(0x21a)]=_0x379972['Symbol'],this[_0x77679(0x1f3)]=RegExp[_0x77679(0x1d8)][_0x77679(0x184)],this[_0x77679(0x1f9)]=Date[_0x77679(0x1d8)]['toString'];}[_0x48a4d6(0x204)](_0x1506ed,_0x2375bb,_0x5b59fc,_0x10f819){var _0x54a7dc=_0x48a4d6,_0x5cbe11=this,_0xf6aff0=_0x5b59fc['autoExpand'];function _0x13c52b(_0x42ca03,_0x4f9d36,_0x124f3e){var _0x57a815=_0x15be;_0x4f9d36[_0x57a815(0x19a)]=_0x57a815(0x189),_0x4f9d36[_0x57a815(0x24f)]=_0x42ca03[_0x57a815(0x188)],_0x5aa39e=_0x124f3e[_0x57a815(0x199)][_0x57a815(0x230)],_0x124f3e['node']['current']=_0x4f9d36,_0x5cbe11[_0x57a815(0x21d)](_0x4f9d36,_0x124f3e);}try{_0x5b59fc[_0x54a7dc(0x1ab)]++,_0x5b59fc['autoExpand']&&_0x5b59fc[_0x54a7dc(0x1b8)]['push'](_0x2375bb);var _0x3715c1,_0x415d6b,_0x51048d,_0x4db97c,_0x59b530=[],_0x76ac81=[],_0x1fe9d8,_0x359af2=this[_0x54a7dc(0x250)](_0x2375bb),_0x1ca8ed=_0x359af2===_0x54a7dc(0x1c2),_0x55e727=!0x1,_0x1b0495=_0x359af2==='function',_0x36795a=this['_isPrimitiveType'](_0x359af2),_0x16b8c1=this[_0x54a7dc(0x1ba)](_0x359af2),_0x582b69=_0x36795a||_0x16b8c1,_0x4738f7={},_0x11b7c5=0x0,_0x2e543c=!0x1,_0x5aa39e,_0x368d6c=/^(([1-9]{1}[0-9]*)|0)$/;if(_0x5b59fc[_0x54a7dc(0x160)]){if(_0x1ca8ed){if(_0x415d6b=_0x2375bb[_0x54a7dc(0x256)],_0x415d6b>_0x5b59fc['elements']){for(_0x51048d=0x0,_0x4db97c=_0x5b59fc[_0x54a7dc(0x162)],_0x3715c1=_0x51048d;_0x3715c1<_0x4db97c;_0x3715c1++)_0x76ac81[_0x54a7dc(0x1bb)](_0x5cbe11['_addProperty'](_0x59b530,_0x2375bb,_0x359af2,_0x3715c1,_0x5b59fc));_0x1506ed[_0x54a7dc(0x1fa)]=!0x0;}else{for(_0x51048d=0x0,_0x4db97c=_0x415d6b,_0x3715c1=_0x51048d;_0x3715c1<_0x4db97c;_0x3715c1++)_0x76ac81[_0x54a7dc(0x1bb)](_0x5cbe11[_0x54a7dc(0x1f1)](_0x59b530,_0x2375bb,_0x359af2,_0x3715c1,_0x5b59fc));}_0x5b59fc[_0x54a7dc(0x16e)]+=_0x76ac81[_0x54a7dc(0x256)];}if(!(_0x359af2==='null'||_0x359af2===_0x54a7dc(0x1f8))&&!_0x36795a&&_0x359af2!=='String'&&_0x359af2!==_0x54a7dc(0x170)&&_0x359af2!==_0x54a7dc(0x202)){var _0x386f9c=_0x10f819[_0x54a7dc(0x193)]||_0x5b59fc['props'];if(this[_0x54a7dc(0x224)](_0x2375bb)?(_0x3715c1=0x0,_0x2375bb['forEach'](function(_0x475dfc){var _0x32b505=_0x54a7dc;if(_0x11b7c5++,_0x5b59fc[_0x32b505(0x16e)]++,_0x11b7c5>_0x386f9c){_0x2e543c=!0x0;return;}if(!_0x5b59fc[_0x32b505(0x18c)]&&_0x5b59fc[_0x32b505(0x1c8)]&&_0x5b59fc['autoExpandPropertyCount']>_0x5b59fc[_0x32b505(0x1bd)]){_0x2e543c=!0x0;return;}_0x76ac81['push'](_0x5cbe11['_addProperty'](_0x59b530,_0x2375bb,'Set',_0x3715c1++,_0x5b59fc,function(_0x2846d5){return function(){return _0x2846d5;};}(_0x475dfc)));})):this[_0x54a7dc(0x1ed)](_0x2375bb)&&_0x2375bb[_0x54a7dc(0x1b3)](function(_0x5017c9,_0xbd6dab){var _0x4a8e04=_0x54a7dc;if(_0x11b7c5++,_0x5b59fc[_0x4a8e04(0x16e)]++,_0x11b7c5>_0x386f9c){_0x2e543c=!0x0;return;}if(!_0x5b59fc[_0x4a8e04(0x18c)]&&_0x5b59fc['autoExpand']&&_0x5b59fc[_0x4a8e04(0x16e)]>_0x5b59fc[_0x4a8e04(0x1bd)]){_0x2e543c=!0x0;return;}var _0x4d6583=_0xbd6dab['toString']();_0x4d6583['length']>0x64&&(_0x4d6583=_0x4d6583['slice'](0x0,0x64)+_0x4a8e04(0x1e8)),_0x76ac81[_0x4a8e04(0x1bb)](_0x5cbe11[_0x4a8e04(0x1f1)](_0x59b530,_0x2375bb,'Map',_0x4d6583,_0x5b59fc,function(_0x28e2f5){return function(){return _0x28e2f5;};}(_0x5017c9)));}),!_0x55e727){try{for(_0x1fe9d8 in _0x2375bb)if(!(_0x1ca8ed&&_0x368d6c[_0x54a7dc(0x1e3)](_0x1fe9d8))&&!this[_0x54a7dc(0x198)](_0x2375bb,_0x1fe9d8,_0x5b59fc)){if(_0x11b7c5++,_0x5b59fc[_0x54a7dc(0x16e)]++,_0x11b7c5>_0x386f9c){_0x2e543c=!0x0;break;}if(!_0x5b59fc['isExpressionToEvaluate']&&_0x5b59fc[_0x54a7dc(0x1c8)]&&_0x5b59fc[_0x54a7dc(0x16e)]>_0x5b59fc['autoExpandLimit']){_0x2e543c=!0x0;break;}_0x76ac81[_0x54a7dc(0x1bb)](_0x5cbe11['_addObjectProperty'](_0x59b530,_0x4738f7,_0x2375bb,_0x359af2,_0x1fe9d8,_0x5b59fc));}}catch{}if(_0x4738f7[_0x54a7dc(0x210)]=!0x0,_0x1b0495&&(_0x4738f7[_0x54a7dc(0x207)]=!0x0),!_0x2e543c){var _0x45dabd=[]['concat'](this[_0x54a7dc(0x18a)](_0x2375bb))[_0x54a7dc(0x24d)](this[_0x54a7dc(0x161)](_0x2375bb));for(_0x3715c1=0x0,_0x415d6b=_0x45dabd[_0x54a7dc(0x256)];_0x3715c1<_0x415d6b;_0x3715c1++)if(_0x1fe9d8=_0x45dabd[_0x3715c1],!(_0x1ca8ed&&_0x368d6c[_0x54a7dc(0x1e3)](_0x1fe9d8['toString']()))&&!this['_blacklistedProperty'](_0x2375bb,_0x1fe9d8,_0x5b59fc)&&!_0x4738f7[_0x54a7dc(0x254)+_0x1fe9d8[_0x54a7dc(0x184)]()]){if(_0x11b7c5++,_0x5b59fc[_0x54a7dc(0x16e)]++,_0x11b7c5>_0x386f9c){_0x2e543c=!0x0;break;}if(!_0x5b59fc['isExpressionToEvaluate']&&_0x5b59fc[_0x54a7dc(0x1c8)]&&_0x5b59fc[_0x54a7dc(0x16e)]>_0x5b59fc[_0x54a7dc(0x1bd)]){_0x2e543c=!0x0;break;}_0x76ac81[_0x54a7dc(0x1bb)](_0x5cbe11['_addObjectProperty'](_0x59b530,_0x4738f7,_0x2375bb,_0x359af2,_0x1fe9d8,_0x5b59fc));}}}}}if(_0x1506ed[_0x54a7dc(0x19a)]=_0x359af2,_0x582b69?(_0x1506ed[_0x54a7dc(0x212)]=_0x2375bb[_0x54a7dc(0x192)](),this[_0x54a7dc(0x236)](_0x359af2,_0x1506ed,_0x5b59fc,_0x10f819)):_0x359af2==='date'?_0x1506ed[_0x54a7dc(0x212)]=this[_0x54a7dc(0x1f9)][_0x54a7dc(0x1dc)](_0x2375bb):_0x359af2==='bigint'?_0x1506ed['value']=_0x2375bb[_0x54a7dc(0x184)]():_0x359af2===_0x54a7dc(0x1c4)?_0x1506ed[_0x54a7dc(0x212)]=this[_0x54a7dc(0x1f3)][_0x54a7dc(0x1dc)](_0x2375bb):_0x359af2===_0x54a7dc(0x166)&&this[_0x54a7dc(0x21a)]?_0x1506ed['value']=this[_0x54a7dc(0x21a)][_0x54a7dc(0x1d8)][_0x54a7dc(0x184)][_0x54a7dc(0x1dc)](_0x2375bb):!_0x5b59fc[_0x54a7dc(0x160)]&&!(_0x359af2===_0x54a7dc(0x1ad)||_0x359af2==='undefined')&&(delete _0x1506ed['value'],_0x1506ed[_0x54a7dc(0x18e)]=!0x0),_0x2e543c&&(_0x1506ed[_0x54a7dc(0x1fc)]=!0x0),_0x5aa39e=_0x5b59fc['node'][_0x54a7dc(0x230)],_0x5b59fc[_0x54a7dc(0x199)][_0x54a7dc(0x230)]=_0x1506ed,this[_0x54a7dc(0x21d)](_0x1506ed,_0x5b59fc),_0x76ac81['length']){for(_0x3715c1=0x0,_0x415d6b=_0x76ac81[_0x54a7dc(0x256)];_0x3715c1<_0x415d6b;_0x3715c1++)_0x76ac81[_0x3715c1](_0x3715c1);}_0x59b530[_0x54a7dc(0x256)]&&(_0x1506ed[_0x54a7dc(0x193)]=_0x59b530);}catch(_0x31bfcc){_0x13c52b(_0x31bfcc,_0x1506ed,_0x5b59fc);}return this[_0x54a7dc(0x21e)](_0x2375bb,_0x1506ed),this[_0x54a7dc(0x1df)](_0x1506ed,_0x5b59fc),_0x5b59fc[_0x54a7dc(0x199)][_0x54a7dc(0x230)]=_0x5aa39e,_0x5b59fc[_0x54a7dc(0x1ab)]--,_0x5b59fc['autoExpand']=_0xf6aff0,_0x5b59fc[_0x54a7dc(0x1c8)]&&_0x5b59fc[_0x54a7dc(0x1b8)]['pop'](),_0x1506ed;}[_0x48a4d6(0x161)](_0x1bb6fb){var _0x1ff7bd=_0x48a4d6;return Object[_0x1ff7bd(0x1a2)]?Object[_0x1ff7bd(0x1a2)](_0x1bb6fb):[];}[_0x48a4d6(0x224)](_0x2b7389){var _0x21f773=_0x48a4d6;return!!(_0x2b7389&&_0x379972[_0x21f773(0x220)]&&this[_0x21f773(0x1f5)](_0x2b7389)===_0x21f773(0x223)&&_0x2b7389[_0x21f773(0x1b3)]);}[_0x48a4d6(0x198)](_0x38c3ac,_0x416a57,_0x193892){var _0x519458=_0x48a4d6;return _0x193892[_0x519458(0x182)]?typeof _0x38c3ac[_0x416a57]==_0x519458(0x1bf):!0x1;}['_type'](_0xcb42ae){var _0x14b1e6=_0x48a4d6,_0x3f45f9='';return _0x3f45f9=typeof _0xcb42ae,_0x3f45f9===_0x14b1e6(0x187)?this['_objectToString'](_0xcb42ae)===_0x14b1e6(0x249)?_0x3f45f9=_0x14b1e6(0x1c2):this[_0x14b1e6(0x1f5)](_0xcb42ae)==='[object\\\\x20Date]'?_0x3f45f9='date':this['_objectToString'](_0xcb42ae)===_0x14b1e6(0x24a)?_0x3f45f9=_0x14b1e6(0x202):_0xcb42ae===null?_0x3f45f9=_0x14b1e6(0x1ad):_0xcb42ae[_0x14b1e6(0x1f6)]&&(_0x3f45f9=_0xcb42ae[_0x14b1e6(0x1f6)][_0x14b1e6(0x1c7)]||_0x3f45f9):_0x3f45f9===_0x14b1e6(0x1f8)&&this['_HTMLAllCollection']&&_0xcb42ae instanceof this[_0x14b1e6(0x174)]&&(_0x3f45f9='HTMLAllCollection'),_0x3f45f9;}[_0x48a4d6(0x1f5)](_0x1546b6){var _0x303287=_0x48a4d6;return Object['prototype'][_0x303287(0x184)]['call'](_0x1546b6);}[_0x48a4d6(0x219)](_0x3b6775){var _0x1bfcfb=_0x48a4d6;return _0x3b6775==='boolean'||_0x3b6775===_0x1bfcfb(0x18d)||_0x3b6775===_0x1bfcfb(0x17f);}[_0x48a4d6(0x1ba)](_0x275012){var _0x4e4f01=_0x48a4d6;return _0x275012===_0x4e4f01(0x1ea)||_0x275012==='String'||_0x275012===_0x4e4f01(0x1d0);}[_0x48a4d6(0x1f1)](_0x136552,_0x5d3a47,_0x33f8eb,_0x13d2d0,_0x22561f,_0xbf1650){var _0x3fac6c=this;return function(_0x4b7683){var _0xd2fc86=_0x15be,_0x54afb3=_0x22561f[_0xd2fc86(0x199)][_0xd2fc86(0x230)],_0xe12a7=_0x22561f[_0xd2fc86(0x199)]['index'],_0x3826be=_0x22561f['node']['parent'];_0x22561f[_0xd2fc86(0x199)][_0xd2fc86(0x244)]=_0x54afb3,_0x22561f[_0xd2fc86(0x199)][_0xd2fc86(0x1ec)]=typeof _0x13d2d0=='number'?_0x13d2d0:_0x4b7683,_0x136552['push'](_0x3fac6c[_0xd2fc86(0x1c5)](_0x5d3a47,_0x33f8eb,_0x13d2d0,_0x22561f,_0xbf1650)),_0x22561f[_0xd2fc86(0x199)][_0xd2fc86(0x244)]=_0x3826be,_0x22561f['node']['index']=_0xe12a7;};}[_0x48a4d6(0x257)](_0x52f2d4,_0x4ec410,_0x142f7e,_0x4901c6,_0x5a34ce,_0x3ef9ff,_0xd37ac){var _0x22a5dc=_0x48a4d6,_0x55d45f=this;return _0x4ec410[_0x22a5dc(0x254)+_0x5a34ce['toString']()]=!0x0,function(_0x22ba82){var _0x4558fc=_0x22a5dc,_0x1d8c5e=_0x3ef9ff[_0x4558fc(0x199)][_0x4558fc(0x230)],_0x58b9fe=_0x3ef9ff[_0x4558fc(0x199)][_0x4558fc(0x1ec)],_0xdcb21a=_0x3ef9ff['node'][_0x4558fc(0x244)];_0x3ef9ff[_0x4558fc(0x199)][_0x4558fc(0x244)]=_0x1d8c5e,_0x3ef9ff[_0x4558fc(0x199)][_0x4558fc(0x1ec)]=_0x22ba82,_0x52f2d4['push'](_0x55d45f[_0x4558fc(0x1c5)](_0x142f7e,_0x4901c6,_0x5a34ce,_0x3ef9ff,_0xd37ac)),_0x3ef9ff['node'][_0x4558fc(0x244)]=_0xdcb21a,_0x3ef9ff[_0x4558fc(0x199)][_0x4558fc(0x1ec)]=_0x58b9fe;};}[_0x48a4d6(0x1c5)](_0x52eeb9,_0x360e80,_0xc3392a,_0x518d8e,_0x4cd50c){var _0x37703a=_0x48a4d6,_0x199733=this;_0x4cd50c||(_0x4cd50c=function(_0x1ea7bc,_0x535577){return _0x1ea7bc[_0x535577];});var _0x736bed=_0xc3392a['toString'](),_0x4019a4=_0x518d8e[_0x37703a(0x238)]||{},_0x4fca1d=_0x518d8e['depth'],_0x39957b=_0x518d8e[_0x37703a(0x18c)];try{var _0xfc111e=this[_0x37703a(0x1ed)](_0x52eeb9),_0x2d1167=_0x736bed;_0xfc111e&&_0x2d1167[0x0]==='\\\\x27'&&(_0x2d1167=_0x2d1167['substr'](0x1,_0x2d1167[_0x37703a(0x256)]-0x2));var _0x38532f=_0x518d8e[_0x37703a(0x238)]=_0x4019a4[_0x37703a(0x254)+_0x2d1167];_0x38532f&&(_0x518d8e[_0x37703a(0x160)]=_0x518d8e[_0x37703a(0x160)]+0x1),_0x518d8e['isExpressionToEvaluate']=!!_0x38532f;var _0x2f2e80=typeof _0xc3392a==_0x37703a(0x166),_0x592971={'name':_0x2f2e80||_0xfc111e?_0x736bed:this[_0x37703a(0x1a0)](_0x736bed)};if(_0x2f2e80&&(_0x592971[_0x37703a(0x166)]=!0x0),!(_0x360e80===_0x37703a(0x1c2)||_0x360e80===_0x37703a(0x19b))){var _0x53020a=this[_0x37703a(0x1ae)](_0x52eeb9,_0xc3392a);if(_0x53020a&&(_0x53020a[_0x37703a(0x1ee)]&&(_0x592971[_0x37703a(0x179)]=!0x0),_0x53020a[_0x37703a(0x1f2)]&&!_0x38532f&&!_0x518d8e[_0x37703a(0x19d)]))return _0x592971[_0x37703a(0x240)]=!0x0,this[_0x37703a(0x1c9)](_0x592971,_0x518d8e),_0x592971;}var _0x24ac17;try{_0x24ac17=_0x4cd50c(_0x52eeb9,_0xc3392a);}catch(_0x421f93){return _0x592971={'name':_0x736bed,'type':_0x37703a(0x189),'error':_0x421f93[_0x37703a(0x188)]},this[_0x37703a(0x1c9)](_0x592971,_0x518d8e),_0x592971;}var _0x173dee=this[_0x37703a(0x250)](_0x24ac17),_0x4ea895=this[_0x37703a(0x219)](_0x173dee);if(_0x592971[_0x37703a(0x19a)]=_0x173dee,_0x4ea895)this[_0x37703a(0x1c9)](_0x592971,_0x518d8e,_0x24ac17,function(){var _0x212a8a=_0x37703a;_0x592971[_0x212a8a(0x212)]=_0x24ac17['valueOf'](),!_0x38532f&&_0x199733['_capIfString'](_0x173dee,_0x592971,_0x518d8e,{});});else{var _0x494c95=_0x518d8e[_0x37703a(0x1c8)]&&_0x518d8e['level']<_0x518d8e['autoExpandMaxDepth']&&_0x518d8e[_0x37703a(0x1b8)][_0x37703a(0x197)](_0x24ac17)<0x0&&_0x173dee!==_0x37703a(0x1bf)&&_0x518d8e[_0x37703a(0x16e)]<_0x518d8e[_0x37703a(0x1bd)];_0x494c95||_0x518d8e[_0x37703a(0x1ab)]<_0x4fca1d||_0x38532f?(this[_0x37703a(0x204)](_0x592971,_0x24ac17,_0x518d8e,_0x38532f||{}),this[_0x37703a(0x21e)](_0x24ac17,_0x592971)):this[_0x37703a(0x1c9)](_0x592971,_0x518d8e,_0x24ac17,function(){var _0x44076f=_0x37703a;_0x173dee===_0x44076f(0x1ad)||_0x173dee===_0x44076f(0x1f8)||(delete _0x592971[_0x44076f(0x212)],_0x592971['capped']=!0x0);});}return _0x592971;}finally{_0x518d8e['expressionsToEvaluate']=_0x4019a4,_0x518d8e['depth']=_0x4fca1d,_0x518d8e[_0x37703a(0x18c)]=_0x39957b;}}[_0x48a4d6(0x236)](_0x377af8,_0x23e0b8,_0x2e17fb,_0x1340ca){var _0x4a72c4=_0x48a4d6,_0x7554d9=_0x1340ca['strLength']||_0x2e17fb[_0x4a72c4(0x1a8)];if((_0x377af8===_0x4a72c4(0x18d)||_0x377af8===_0x4a72c4(0x1fd))&&_0x23e0b8[_0x4a72c4(0x212)]){let _0x4c2df4=_0x23e0b8['value'][_0x4a72c4(0x256)];_0x2e17fb['allStrLength']+=_0x4c2df4,_0x2e17fb[_0x4a72c4(0x195)]>_0x2e17fb[_0x4a72c4(0x228)]?(_0x23e0b8[_0x4a72c4(0x18e)]='',delete _0x23e0b8[_0x4a72c4(0x212)]):_0x4c2df4>_0x7554d9&&(_0x23e0b8['capped']=_0x23e0b8['value'][_0x4a72c4(0x1db)](0x0,_0x7554d9),delete _0x23e0b8[_0x4a72c4(0x212)]);}}[_0x48a4d6(0x1ed)](_0x444748){var _0x1ea3a0=_0x48a4d6;return!!(_0x444748&&_0x379972[_0x1ea3a0(0x22c)]&&this[_0x1ea3a0(0x1f5)](_0x444748)===_0x1ea3a0(0x176)&&_0x444748['forEach']);}[_0x48a4d6(0x1a0)](_0x359f3f){var _0x34c129=_0x48a4d6;if(_0x359f3f[_0x34c129(0x201)](/^\\\\d+$/))return _0x359f3f;var _0x1bdfc7;try{_0x1bdfc7=JSON[_0x34c129(0x165)](''+_0x359f3f);}catch{_0x1bdfc7='\\\\x22'+this[_0x34c129(0x1f5)](_0x359f3f)+'\\\\x22';}return _0x1bdfc7[_0x34c129(0x201)](/^\\\"([a-zA-Z_][a-zA-Z_0-9]*)\\\"$/)?_0x1bdfc7=_0x1bdfc7['substr'](0x1,_0x1bdfc7['length']-0x2):_0x1bdfc7=_0x1bdfc7['replace'](/'/g,'\\\\x5c\\\\x27')[_0x34c129(0x185)](/\\\\\\\\\\\"/g,'\\\\x22')[_0x34c129(0x185)](/(^\\\"|\\\"$)/g,'\\\\x27'),_0x1bdfc7;}['_processTreeNodeResult'](_0x36af15,_0x5c68df,_0x2c4d29,_0x2c2fbd){var _0xd8026d=_0x48a4d6;this[_0xd8026d(0x21d)](_0x36af15,_0x5c68df),_0x2c2fbd&&_0x2c2fbd(),this[_0xd8026d(0x21e)](_0x2c4d29,_0x36af15),this['_treeNodePropertiesAfterFullValue'](_0x36af15,_0x5c68df);}[_0x48a4d6(0x21d)](_0x9aeb36,_0x780e12){var _0xb2a539=_0x48a4d6;this[_0xb2a539(0x20d)](_0x9aeb36,_0x780e12),this[_0xb2a539(0x22b)](_0x9aeb36,_0x780e12),this[_0xb2a539(0x1e0)](_0x9aeb36,_0x780e12),this['_setNodePermissions'](_0x9aeb36,_0x780e12);}[_0x48a4d6(0x20d)](_0x1dbdcc,_0x1015a1){}['_setNodeQueryPath'](_0xa09254,_0x419f33){}[_0x48a4d6(0x1a4)](_0x243b6e,_0x3dbd5f){}['_isUndefined'](_0x7b30a0){var _0x1607a4=_0x48a4d6;return _0x7b30a0===this[_0x1607a4(0x183)];}[_0x48a4d6(0x1df)](_0x45932f,_0x53c160){var _0x4f2d16=_0x48a4d6;this[_0x4f2d16(0x1a4)](_0x45932f,_0x53c160),this[_0x4f2d16(0x1e2)](_0x45932f),_0x53c160[_0x4f2d16(0x235)]&&this['_sortProps'](_0x45932f),this[_0x4f2d16(0x1d4)](_0x45932f,_0x53c160),this[_0x4f2d16(0x24b)](_0x45932f,_0x53c160),this[_0x4f2d16(0x168)](_0x45932f);}[_0x48a4d6(0x21e)](_0x45c866,_0x55b15a){var _0x327e8b=_0x48a4d6;let _0x479da1;try{_0x379972['console']&&(_0x479da1=_0x379972['console']['error'],_0x379972['console'][_0x327e8b(0x24f)]=function(){}),_0x45c866&&typeof _0x45c866[_0x327e8b(0x256)]==_0x327e8b(0x17f)&&(_0x55b15a[_0x327e8b(0x256)]=_0x45c866[_0x327e8b(0x256)]);}catch{}finally{_0x479da1&&(_0x379972[_0x327e8b(0x1e6)][_0x327e8b(0x24f)]=_0x479da1);}if(_0x55b15a[_0x327e8b(0x19a)]===_0x327e8b(0x17f)||_0x55b15a[_0x327e8b(0x19a)]===_0x327e8b(0x1d0)){if(isNaN(_0x55b15a[_0x327e8b(0x212)]))_0x55b15a[_0x327e8b(0x169)]=!0x0,delete _0x55b15a[_0x327e8b(0x212)];else switch(_0x55b15a[_0x327e8b(0x212)]){case Number['POSITIVE_INFINITY']:_0x55b15a['positiveInfinity']=!0x0,delete _0x55b15a[_0x327e8b(0x212)];break;case Number['NEGATIVE_INFINITY']:_0x55b15a[_0x327e8b(0x1fe)]=!0x0,delete _0x55b15a['value'];break;case 0x0:this[_0x327e8b(0x239)](_0x55b15a[_0x327e8b(0x212)])&&(_0x55b15a[_0x327e8b(0x1cb)]=!0x0);break;}}else _0x55b15a[_0x327e8b(0x19a)]===_0x327e8b(0x1bf)&&typeof _0x45c866[_0x327e8b(0x1c7)]==_0x327e8b(0x18d)&&_0x45c866['name']&&_0x55b15a[_0x327e8b(0x1c7)]&&_0x45c866[_0x327e8b(0x1c7)]!==_0x55b15a['name']&&(_0x55b15a[_0x327e8b(0x208)]=_0x45c866[_0x327e8b(0x1c7)]);}['_isNegativeZero'](_0x2dfb8c){var _0x3c8184=_0x48a4d6;return 0x1/_0x2dfb8c===Number[_0x3c8184(0x186)];}[_0x48a4d6(0x216)](_0x1c3ea0){var _0x1e32b2=_0x48a4d6;!_0x1c3ea0[_0x1e32b2(0x193)]||!_0x1c3ea0[_0x1e32b2(0x193)][_0x1e32b2(0x256)]||_0x1c3ea0[_0x1e32b2(0x19a)]===_0x1e32b2(0x1c2)||_0x1c3ea0[_0x1e32b2(0x19a)]===_0x1e32b2(0x22c)||_0x1c3ea0['type']==='Set'||_0x1c3ea0['props'][_0x1e32b2(0x191)](function(_0x40a6da,_0x13394f){var _0x562a58=_0x1e32b2,_0x44531b=_0x40a6da[_0x562a58(0x1c7)][_0x562a58(0x225)](),_0x2968e8=_0x13394f[_0x562a58(0x1c7)][_0x562a58(0x225)]();return _0x44531b<_0x2968e8?-0x1:_0x44531b>_0x2968e8?0x1:0x0;});}[_0x48a4d6(0x1d4)](_0x56e7f9,_0x418fc2){var _0x4a4ee2=_0x48a4d6;if(!(_0x418fc2[_0x4a4ee2(0x182)]||!_0x56e7f9[_0x4a4ee2(0x193)]||!_0x56e7f9[_0x4a4ee2(0x193)][_0x4a4ee2(0x256)])){for(var _0x2c1744=[],_0x3fc3ea=[],_0x30318a=0x0,_0x4d5884=_0x56e7f9[_0x4a4ee2(0x193)][_0x4a4ee2(0x256)];_0x30318a<_0x4d5884;_0x30318a++){var _0x460aae=_0x56e7f9[_0x4a4ee2(0x193)][_0x30318a];_0x460aae[_0x4a4ee2(0x19a)]===_0x4a4ee2(0x1bf)?_0x2c1744[_0x4a4ee2(0x1bb)](_0x460aae):_0x3fc3ea['push'](_0x460aae);}if(!(!_0x3fc3ea[_0x4a4ee2(0x256)]||_0x2c1744[_0x4a4ee2(0x256)]<=0x1)){_0x56e7f9[_0x4a4ee2(0x193)]=_0x3fc3ea;var _0x1867c8={'functionsNode':!0x0,'props':_0x2c1744};this['_setNodeId'](_0x1867c8,_0x418fc2),this[_0x4a4ee2(0x1a4)](_0x1867c8,_0x418fc2),this['_setNodeExpandableState'](_0x1867c8),this['_setNodePermissions'](_0x1867c8,_0x418fc2),_0x1867c8['id']+='\\\\x20f',_0x56e7f9['props'][_0x4a4ee2(0x24c)](_0x1867c8);}}}[_0x48a4d6(0x24b)](_0x4799f5,_0x9981bb){}[_0x48a4d6(0x1e2)](_0x31c3e6){}[_0x48a4d6(0x1a5)](_0x1ce3ac){var _0x2d6895=_0x48a4d6;return Array[_0x2d6895(0x1ff)](_0x1ce3ac)||typeof _0x1ce3ac==_0x2d6895(0x187)&&this['_objectToString'](_0x1ce3ac)==='[object\\\\x20Array]';}['_setNodePermissions'](_0x2622cd,_0x4c9fd8){}[_0x48a4d6(0x168)](_0xabf9b8){var _0x112e95=_0x48a4d6;delete _0xabf9b8['_hasSymbolPropertyOnItsPath'],delete _0xabf9b8[_0x112e95(0x255)],delete _0xabf9b8[_0x112e95(0x1f4)];}[_0x48a4d6(0x1e0)](_0x269daa,_0xb12718){}}let _0x946099=new _0x3cd7a9(),_0x5a6b29={'props':0x64,'elements':0x64,'strLength':0x400*0x32,'totalStrLength':0x400*0x32,'autoExpandLimit':0x1388,'autoExpandMaxDepth':0xa},_0x5522e8={'props':0x5,'elements':0x5,'strLength':0x100,'totalStrLength':0x100*0x3,'autoExpandLimit':0x1e,'autoExpandMaxDepth':0x2};function _0x574fde(_0x14c2a1,_0x168ac9,_0x3d9728,_0x1e1214,_0x372384,_0x4e2435){var _0x4c01d0=_0x48a4d6;let _0x5a21b2,_0x3edba8;try{_0x3edba8=_0x29b2e0(),_0x5a21b2=_0x32f390[_0x168ac9],!_0x5a21b2||_0x3edba8-_0x5a21b2['ts']>0x1f4&&_0x5a21b2['count']&&_0x5a21b2[_0x4c01d0(0x167)]/_0x5a21b2[_0x4c01d0(0x23c)]<0x64?(_0x32f390[_0x168ac9]=_0x5a21b2={'count':0x0,'time':0x0,'ts':_0x3edba8},_0x32f390[_0x4c01d0(0x1d5)]={}):_0x3edba8-_0x32f390[_0x4c01d0(0x1d5)]['ts']>0x32&&_0x32f390[_0x4c01d0(0x1d5)]['count']&&_0x32f390[_0x4c01d0(0x1d5)][_0x4c01d0(0x167)]/_0x32f390['hits'][_0x4c01d0(0x23c)]<0x64&&(_0x32f390[_0x4c01d0(0x1d5)]={});let _0x3bc375=[],_0x33f013=_0x5a21b2[_0x4c01d0(0x1be)]||_0x32f390[_0x4c01d0(0x1d5)]['reduceLimits']?_0x5522e8:_0x5a6b29,_0x3bdc83=_0x54adde=>{var _0x209541=_0x4c01d0;let _0x5a4229={};return _0x5a4229[_0x209541(0x193)]=_0x54adde[_0x209541(0x193)],_0x5a4229['elements']=_0x54adde[_0x209541(0x162)],_0x5a4229['strLength']=_0x54adde[_0x209541(0x1a8)],_0x5a4229[_0x209541(0x228)]=_0x54adde[_0x209541(0x228)],_0x5a4229['autoExpandLimit']=_0x54adde['autoExpandLimit'],_0x5a4229[_0x209541(0x211)]=_0x54adde[_0x209541(0x211)],_0x5a4229['sortProps']=!0x1,_0x5a4229[_0x209541(0x182)]=!_0x469026,_0x5a4229[_0x209541(0x160)]=0x1,_0x5a4229[_0x209541(0x1ab)]=0x0,_0x5a4229[_0x209541(0x229)]=_0x209541(0x177),_0x5a4229['rootExpression']=_0x209541(0x234),_0x5a4229[_0x209541(0x1c8)]=!0x0,_0x5a4229['autoExpandPreviousObjects']=[],_0x5a4229[_0x209541(0x16e)]=0x0,_0x5a4229[_0x209541(0x19d)]=!0x0,_0x5a4229['allStrLength']=0x0,_0x5a4229[_0x209541(0x199)]={'current':void 0x0,'parent':void 0x0,'index':0x0},_0x5a4229;};for(var _0x17c8df=0x0;_0x17c8df<_0x372384[_0x4c01d0(0x256)];_0x17c8df++)_0x3bc375[_0x4c01d0(0x1bb)](_0x946099[_0x4c01d0(0x204)]({'timeNode':_0x14c2a1==='time'||void 0x0},_0x372384[_0x17c8df],_0x3bdc83(_0x33f013),{}));if(_0x14c2a1==='trace'){let _0x25e4e2=Error[_0x4c01d0(0x1cd)];try{Error[_0x4c01d0(0x1cd)]=0x1/0x0,_0x3bc375[_0x4c01d0(0x1bb)](_0x946099[_0x4c01d0(0x204)]({'stackNode':!0x0},new Error()[_0x4c01d0(0x1e1)],_0x3bdc83(_0x33f013),{'strLength':0x1/0x0}));}finally{Error[_0x4c01d0(0x1cd)]=_0x25e4e2;}}return{'method':_0x4c01d0(0x1a6),'version':_0x496bd9,'args':[{'ts':_0x3d9728,'session':_0x1e1214,'args':_0x3bc375,'id':_0x168ac9,'context':_0x4e2435}]};}catch(_0x3b9703){return{'method':'log','version':_0x496bd9,'args':[{'ts':_0x3d9728,'session':_0x1e1214,'args':[{'type':'unknown','error':_0x3b9703&&_0x3b9703['message']}],'id':_0x168ac9,'context':_0x4e2435}]};}finally{try{if(_0x5a21b2&&_0x3edba8){let _0x5d1e94=_0x29b2e0();_0x5a21b2['count']++,_0x5a21b2['time']+=_0x267971(_0x3edba8,_0x5d1e94),_0x5a21b2['ts']=_0x5d1e94,_0x32f390[_0x4c01d0(0x1d5)][_0x4c01d0(0x23c)]++,_0x32f390[_0x4c01d0(0x1d5)][_0x4c01d0(0x167)]+=_0x267971(_0x3edba8,_0x5d1e94),_0x32f390['hits']['ts']=_0x5d1e94,(_0x5a21b2['count']>0x32||_0x5a21b2[_0x4c01d0(0x167)]>0x64)&&(_0x5a21b2[_0x4c01d0(0x1be)]=!0x0),(_0x32f390[_0x4c01d0(0x1d5)][_0x4c01d0(0x23c)]>0x3e8||_0x32f390[_0x4c01d0(0x1d5)][_0x4c01d0(0x167)]>0x12c)&&(_0x32f390[_0x4c01d0(0x1d5)][_0x4c01d0(0x1be)]=!0x0);}}catch{}}}return _0x574fde;}((_0x64dc38,_0x5fb82,_0x3713b9,_0x395701,_0x4cf6e3,_0x5ee3c2,_0x122092,_0x1d7929,_0x43984e,_0x5a70b1,_0x5f4168)=>{var _0x8af81c=_0x9d4878;if(_0x64dc38[_0x8af81c(0x1ef)])return _0x64dc38[_0x8af81c(0x1ef)];if(!H(_0x64dc38,_0x1d7929,_0x4cf6e3))return _0x64dc38['_console_ninja']={'consoleLog':()=>{},'consoleTrace':()=>{},'consoleTime':()=>{},'consoleTimeEnd':()=>{},'autoLog':()=>{},'autoLogMany':()=>{},'autoTraceMany':()=>{},'coverage':()=>{},'autoTrace':()=>{},'autoTime':()=>{},'autoTimeEnd':()=>{}},_0x64dc38[_0x8af81c(0x1ef)];let _0x2907ad=b(_0x64dc38),_0x10052f=_0x2907ad[_0x8af81c(0x20c)],_0x1e6da0=_0x2907ad[_0x8af81c(0x253)],_0x44a8b7=_0x2907ad[_0x8af81c(0x22f)],_0xdc9ed={'hits':{},'ts':{}},_0x5e3ee9=X(_0x64dc38,_0x43984e,_0xdc9ed,_0x5ee3c2),_0x5e4ade=_0x304e2f=>{_0xdc9ed['ts'][_0x304e2f]=_0x1e6da0();},_0x56ef43=(_0x1314e3,_0x88bf94)=>{var _0x45434e=_0x8af81c;let _0xa765d2=_0xdc9ed['ts'][_0x88bf94];if(delete _0xdc9ed['ts'][_0x88bf94],_0xa765d2){let _0xfb9508=_0x10052f(_0xa765d2,_0x1e6da0());_0x16af11(_0x5e3ee9(_0x45434e(0x167),_0x1314e3,_0x44a8b7(),_0x33a203,[_0xfb9508],_0x88bf94));}},_0x36769f=_0x421346=>{var _0xab90ed=_0x8af81c,_0xa6990e;return _0x4cf6e3===_0xab90ed(0x1fb)&&_0x64dc38[_0xab90ed(0x175)]&&((_0xa6990e=_0x421346==null?void 0x0:_0x421346[_0xab90ed(0x246)])==null?void 0x0:_0xa6990e['length'])&&(_0x421346[_0xab90ed(0x246)][0x0][_0xab90ed(0x175)]=_0x64dc38[_0xab90ed(0x175)]),_0x421346;};_0x64dc38[_0x8af81c(0x1ef)]={'consoleLog':(_0x29d71f,_0x3dec54)=>{var _0x2a382d=_0x8af81c;_0x64dc38[_0x2a382d(0x1e6)]['log'][_0x2a382d(0x1c7)]!==_0x2a382d(0x1f7)&&_0x16af11(_0x5e3ee9('log',_0x29d71f,_0x44a8b7(),_0x33a203,_0x3dec54));},'consoleTrace':(_0x26df15,_0x6fd449)=>{var _0x143c31=_0x8af81c;_0x64dc38['console']['log'][_0x143c31(0x1c7)]!==_0x143c31(0x251)&&_0x16af11(_0x36769f(_0x5e3ee9('trace',_0x26df15,_0x44a8b7(),_0x33a203,_0x6fd449)));},'consoleTime':_0x3a6211=>{_0x5e4ade(_0x3a6211);},'consoleTimeEnd':(_0x3cfb15,_0x1295a8)=>{_0x56ef43(_0x1295a8,_0x3cfb15);},'autoLog':(_0x50cf13,_0x1117fc)=>{var _0x5c1e1b=_0x8af81c;_0x16af11(_0x5e3ee9(_0x5c1e1b(0x1a6),_0x1117fc,_0x44a8b7(),_0x33a203,[_0x50cf13]));},'autoLogMany':(_0x18e694,_0x221fd9)=>{_0x16af11(_0x5e3ee9('log',_0x18e694,_0x44a8b7(),_0x33a203,_0x221fd9));},'autoTrace':(_0x1edc5d,_0x34e8cc)=>{var _0x23d3c0=_0x8af81c;_0x16af11(_0x36769f(_0x5e3ee9(_0x23d3c0(0x227),_0x34e8cc,_0x44a8b7(),_0x33a203,[_0x1edc5d])));},'autoTraceMany':(_0x75d9b4,_0x6a58b2)=>{var _0x22e692=_0x8af81c;_0x16af11(_0x36769f(_0x5e3ee9(_0x22e692(0x227),_0x75d9b4,_0x44a8b7(),_0x33a203,_0x6a58b2)));},'autoTime':(_0x4c1a9a,_0x49cdda,_0xcb7416)=>{_0x5e4ade(_0xcb7416);},'autoTimeEnd':(_0x513752,_0x2d9a88,_0x25f4ae)=>{_0x56ef43(_0x2d9a88,_0x25f4ae);},'coverage':_0x15bad9=>{_0x16af11({'method':'coverage','version':_0x5ee3c2,'args':[{'id':_0x15bad9}]});}};let _0x16af11=q(_0x64dc38,_0x5fb82,_0x3713b9,_0x395701,_0x4cf6e3,_0x5a70b1,_0x5f4168),_0x33a203=_0x64dc38[_0x8af81c(0x247)];return _0x64dc38['_console_ninja'];})(globalThis,_0x9d4878(0x217),_0x9d4878(0x1c1),_0x9d4878(0x205),_0x9d4878(0x1d7),_0x9d4878(0x237),_0x9d4878(0x233),_0x9d4878(0x22a),_0x9d4878(0x15e),_0x9d4878(0x1ca),_0x9d4878(0x1e5));\");\n    } catch (e) {}\n}\n; /* istanbul ignore next */ \nfunction oo_oo(i) {\n    for(var _len = arguments.length, v = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){\n        v[_key - 1] = arguments[_key];\n    }\n    try {\n        oo_cm().consoleLog(i, v);\n    } catch (e) {}\n    return v;\n}\n; /* istanbul ignore next */ \nfunction oo_tr(i) {\n    for(var _len = arguments.length, v = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){\n        v[_key - 1] = arguments[_key];\n    }\n    try {\n        oo_cm().consoleTrace(i, v);\n    } catch (e) {}\n    return v;\n}\n; /* istanbul ignore next */ \nfunction oo_ts(v) {\n    try {\n        oo_cm().consoleTime(v);\n    } catch (e) {}\n    return v;\n}\n; /* istanbul ignore next */ \nfunction oo_te(v, i) {\n    try {\n        oo_cm().consoleTimeEnd(v, i);\n    } catch (e) {}\n    return v;\n}\n; /*eslint unicorn/no-abusive-eslint-disable:,eslint-comments/disable-enable-pair:,eslint-comments/no-unlimited-disable:,eslint-comments/no-aggregating-enable:,eslint-comments/no-duplicate-disable:,eslint-comments/no-unused-disable:,eslint-comments/no-unused-enable:,*/ \nvar _c;\n$RefreshReg$(_c, \"MetaMaskLogin\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/MetaMaskLogin.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider'); // TODO: Delete with enableRenderableContext\n\nvar REACT_CONSUMER_TYPE = Symbol.for('react.consumer');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar REACT_CACHE_TYPE = Symbol.for('react.cache');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\nvar enableRenderableContext = false;\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false;\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n}\n\nvar REACT_CLIENT_REFERENCE$2 = Symbol.for('react.client.reference'); // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  if (typeof type === 'function') {\n    if (type.$$typeof === REACT_CLIENT_REFERENCE$2) {\n      // TODO: Create a convention for naming client references with debug info.\n      return null;\n    }\n\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n    case REACT_CACHE_TYPE:\n      {\n        return 'Cache';\n      }\n\n  }\n\n  if (typeof type === 'object') {\n    {\n      if (typeof type.tag === 'number') {\n        error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n      }\n    }\n\n    switch (type.$$typeof) {\n      case REACT_PROVIDER_TYPE:\n        {\n          var provider = type;\n          return getContextName(provider._context) + '.Provider';\n        }\n\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n\n        {\n          return getContextName(context) + '.Consumer';\n        }\n\n      case REACT_CONSUMER_TYPE:\n        {\n          return null;\n        }\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n    }\n  }\n\n  return null;\n}\n\n// $FlowFixMe[method-unbinding]\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar assign = Object.assign;\n\n/*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object'; // $FlowFixMe[incompatible-return]\n\n    return type;\n  }\n} // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar REACT_CLIENT_REFERENCE$1 = Symbol.for('react.client.reference');\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || enableRenderableContext  || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_CLIENT_REFERENCE$1 || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n/**\n * Leverages native browser/VM stack frames to get proper details (e.g.\n * filename, line + col number) for a single component in a component stack. We\n * do this by:\n *   (1) throwing and catching an error in the function - this will be our\n *       control error.\n *   (2) calling the component which will eventually throw an error that we'll\n *       catch - this will be our sample error.\n *   (3) diffing the control and sample error stacks to find the stack frame\n *       which represents our component.\n */\n\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n  /**\n   * Finding a common stack frame between sample and control errors can be\n   * tricky given the different types and levels of stack trace truncation from\n   * different JS VMs. So instead we'll attempt to control what that common\n   * frame should be through this object method:\n   * Having both the sample and control errors be in the function under the\n   * `DescribeNativeComponentFrameRoot` property, + setting the `name` and\n   * `displayName` properties of the function ensures that a stack\n   * frame exists that has the method name `DescribeNativeComponentFrameRoot` in\n   * it for both control and sample stacks.\n   */\n\n\n  var RunInRootFrame = {\n    DetermineComponentFrameRoot: function () {\n      var control;\n\n      try {\n        // This should throw.\n        if (construct) {\n          // Something should be setting the props in the constructor.\n          var Fake = function () {\n            throw Error();\n          }; // $FlowFixMe[prop-missing]\n\n\n          Object.defineProperty(Fake.prototype, 'props', {\n            set: function () {\n              // We use a throwing setter instead of frozen or non-writable props\n              // because that won't throw in a non-strict mode function.\n              throw Error();\n            }\n          });\n\n          if (typeof Reflect === 'object' && Reflect.construct) {\n            // We construct a different control for this case to include any extra\n            // frames added by the construct call.\n            try {\n              Reflect.construct(Fake, []);\n            } catch (x) {\n              control = x;\n            }\n\n            Reflect.construct(fn, [], Fake);\n          } else {\n            try {\n              Fake.call();\n            } catch (x) {\n              control = x;\n            } // $FlowFixMe[prop-missing] found when upgrading Flow\n\n\n            fn.call(Fake.prototype);\n          }\n        } else {\n          try {\n            throw Error();\n          } catch (x) {\n            control = x;\n          } // TODO(luna): This will currently only throw if the function component\n          // tries to access React/ReactDOM/props. We should probably make this throw\n          // in simple components too\n\n\n          var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n          // component, which we don't yet support. Attach a noop catch handler to\n          // silence the error.\n          // TODO: Implement component stacks for async client components?\n\n          if (maybePromise && typeof maybePromise.catch === 'function') {\n            maybePromise.catch(function () {});\n          }\n        }\n      } catch (sample) {\n        // This is inlined manually because closure doesn't do it for us.\n        if (sample && control && typeof sample.stack === 'string') {\n          return [sample.stack, control.stack];\n        }\n      }\n\n      return [null, null];\n    }\n  }; // $FlowFixMe[prop-missing]\n\n  RunInRootFrame.DetermineComponentFrameRoot.displayName = 'DetermineComponentFrameRoot';\n  var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, 'name'); // Before ES6, the `name` property was not configurable.\n\n  if (namePropDescriptor && namePropDescriptor.configurable) {\n    // V8 utilizes a function's `name` property when generating a stack trace.\n    Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, // Configurable properties can be updated even if its writable descriptor\n    // is set to `false`.\n    // $FlowFixMe[cannot-write]\n    'name', {\n      value: 'DetermineComponentFrameRoot'\n    });\n  }\n\n  try {\n    var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),\n        sampleStack = _RunInRootFrame$Deter[0],\n        controlStack = _RunInRootFrame$Deter[1];\n\n    if (sampleStack && controlStack) {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sampleStack.split('\\n');\n      var controlLines = controlStack.split('\\n');\n      var s = 0;\n      var c = 0;\n\n      while (s < sampleLines.length && !sampleLines[s].includes('DetermineComponentFrameRoot')) {\n        s++;\n      }\n\n      while (c < controlLines.length && !controlLines[c].includes('DetermineComponentFrameRoot')) {\n        c++;\n      } // We couldn't find our intentionally injected common root frame, attempt\n      // to find another common root frame by search from the bottom of the\n      // control stack...\n\n\n      if (s === sampleLines.length || c === controlLines.length) {\n        s = sampleLines.length - 1;\n        c = controlLines.length - 1;\n\n        while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n          // We expect at least one stack frame to be shared.\n          // Typically this will be the root most one. However, stack frames may be\n          // cut off due to maximum stack limits. In this case, one maybe cut off\n          // earlier than the other. We assume that the sample is longer or the same\n          // and there for cut off earlier. So we should find the root most frame in\n          // the sample somewhere in the control.\n          c--;\n        }\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                if (true) {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\nvar REACT_CLIENT_REFERENCE = Symbol.for('react.client.reference');\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    {\n      var warnAboutAccessingRef = function () {\n        if (!specialPropRefWarningShown) {\n          specialPropRefWarningShown = true;\n\n          error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n        }\n      };\n\n      warnAboutAccessingRef.isReactWarning = true;\n      Object.defineProperty(props, 'ref', {\n        get: warnAboutAccessingRef,\n        configurable: true\n      });\n    }\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nfunction ReactElement(type, key, _ref, self, source, owner, props) {\n  var ref;\n\n  {\n    ref = _ref;\n  }\n\n  var element;\n\n  {\n    // In prod, `ref` is a regular property. It will be removed in a\n    // future release.\n    element = {\n      // This tag allows us to uniquely identify this as a React Element\n      $$typeof: REACT_ELEMENT_TYPE,\n      // Built-in properties that belong on the element\n      type: type,\n      key: key,\n      ref: ref,\n      props: props,\n      // Record the component responsible for creating this element.\n      _owner: owner\n    };\n  }\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // debugInfo contains Server Component debug information.\n\n    Object.defineProperty(element, '_debugInfo', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: null\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n}\nvar didWarnAboutKeySpread = {};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV$1(type, config, maybeKey, isStaticChildren, source, self) {\n  {\n    if (!isValidElementType(type)) {\n      // This is an invalid element type.\n      //\n      // We warn in this case but don't throw. We expect the element creation to\n      // succeed and there will likely be errors in render.\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    } else {\n      // This is a valid element type.\n      // Skip key warning if the type isn't valid since our key validation logic\n      // doesn't expect a non-string/function type and can throw confusing\n      // errors. We don't want exception behavior to differ between dev and\n      // prod. (Rendering will throw with a helpful message and as soon as the\n      // type is fixed, the key warnings will appear.)\n      var children = config.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    } // Warn about key spread regardless of whether the type is valid.\n\n\n    if (hasOwnProperty.call(config, 'key')) {\n      var componentName = getComponentNameFromType(type);\n      var keys = Object.keys(config).filter(function (k) {\n        return k !== 'key';\n      });\n      var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n      if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n        var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n        error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n        didWarnAboutKeySpread[componentName + beforeExample] = true;\n      }\n    }\n\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      {\n        ref = config.ref;\n      }\n\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && // Skip over reserved prop names\n      propName !== 'key' && (propName !== 'ref')) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    var element = ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    }\n\n    return element;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object' || !node) {\n      return;\n    }\n\n    if (node.$$typeof === REACT_CLIENT_REFERENCE) ; else if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nvar ownerHasKeyUseWarning = {};\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement(null);\n  }\n}\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = getComponentNameFromType(parentType);\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  // TODO: Move this to render phase instead of at element creation.\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement(null);\n    }\n  }\n}\n\nvar jsxDEV = jsxDEV$1 ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSw4TEFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9yZWFjdC9qc3gtZGV2LXJ1bnRpbWUuanM/ODk5MiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main-app"], function() { return __webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22F%3A%5C%5CProjects%5C%5CLIVEPEER%5C%5CBlive%20Update%5C%5CFrontend%5C%5Cmyapp%5C%5Capp%5C%5CmetaMaskLogin%5C%5Cpage.js%22%2C%22ids%22%3A%5B%5D%7D&server=false!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);