"use strict";(()=>{var e={};e.id=972,e.ids=[972],e.modules={1185:e=>{e.exports=require("mongoose")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},4229:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>y,patchFetch:()=>f,requestAsyncStorage:()=>g,routeModule:()=>m,serverHooks:()=>h,staticGenerationAsyncStorage:()=>v});var a={};r.r(a),r.d(a,{GET:()=>p});var s=r(9303),n=r(8716),i=r(670),o=r(6186);r(1185);var u=r(3077),c=r(4191);let l=process.env.LIVEPEER_API_KEY,d=new o.Livepeer({apiKey:l});async function p(e,t){let{searchParams:r}=new URL(e.url),a=r.get("streamId");if(!a)return new Response(JSON.stringify({error:"Stream ID is required"}),{status:400});try{let e=await d.stream.get(a);console.log("Stream status fetched:",e);let{isActive:t,playbackId:r,status:s}=e.stream;return await (0,c.Z)(),await u.Z.updateOne({"streams.streamId":a},{$set:{"streams.$.status":t?"active":"inactive"}}),new Response(JSON.stringify({playbackUrl:`https://livepeercdn.com/hls/${r}/index.m3u8`,status:t?"active":"inactive"}),{status:200})}catch(e){return console.error("Error fetching stream status:",e),new Response(JSON.stringify({error:e.message}),{status:500})}}let m=new s.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/stream-status/route",pathname:"/api/stream-status",filename:"route",bundlePath:"app/api/stream-status/route"},resolvedPagePath:"D:\\Blive Update\\Frontend\\myapp\\app\\api\\stream-status\\route.js",nextConfigOutput:"",userland:a}),{requestAsyncStorage:g,staticGenerationAsyncStorage:v,serverHooks:h}=m,y="/api/stream-status/route";function f(){return(0,i.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:v})}},4191:(e,t,r)=>{r.d(t,{Z:()=>u});var a=r(1185),s=r.n(a);let n=process.env.MONGODB_URI;if(!n)throw Error("Please define the MONGODB_URI environment variable inside .env.local");let i=null,o=null,u=async function(){if(o)return console.log("Using cached database connection"),{client:i,db:o};console.log("Connecting to new database");try{let e=await s().connect(n,{useNewUrlParser:!0,useUnifiedTopology:!0});return i=e,o=e.connection.db,console.log("Database connection successful"),{client:e,db:o}}catch(e){throw console.error("Error connecting to the database:",e),e}}},3077:(e,t,r)=>{r.d(t,{Z:()=>i});var a=r(1185),s=r.n(a);let n=new(s()).Schema({address:{type:String,required:!0,unique:!0},userName:{type:String},emailId:{type:String,required:!0},fullName:{type:String,required:!0},streams:[{streamId:String,streamKey:String,playbackUrl:String,playbackId:String,createdAt:Date,status:String,streamTitle:String}]}),i=s().models.User||s().model("User",n)}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[948,164],()=>r(4229));module.exports=a})();