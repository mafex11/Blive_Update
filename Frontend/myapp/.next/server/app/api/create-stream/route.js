"use strict";(()=>{var e={};e.id=890,e.ids=[890],e.modules={1185:e=>{e.exports=require("mongoose")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},9073:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>y,patchFetch:()=>S,requestAsyncStorage:()=>g,routeModule:()=>m,serverHooks:()=>h,staticGenerationAsyncStorage:()=>v});var a={};r.r(a),r.d(a,{POST:()=>u});var n=r(9303),s=r(8716),i=r(670),o=r(6186);r(1185);var c=r(3077),l=r(4191);let d=process.env.LIVEPEER_API_KEY,p=new o.Livepeer({apiKey:d});async function u(e,t){let{streamTitle:r,address:a}=await e.json();if(console.log("Received streamTitle:",r),console.log("Received address:",a),!r||!a)return new Response(JSON.stringify({error:"Stream title and address are required"}),{status:400});try{let e=await p.stream.create({name:r});console.log("Stream created:",e);let{id:t,streamKey:n,playbackId:s,createdAt:i,isActive:o}=e.stream;return await (0,l.Z)(),console.log("Data to be stored in MongoDB:",{streamTitle:r,streamId:t,streamKey:n,playbackUrl:`https://livepeercdn.com/hls/${s}/index.m3u8`,playbackId:s,createdAt:i,status:o?"active":"inactive"}),await c.Z.updateOne({address:a},{$push:{streams:{streamTitle:r,streamId:t,streamKey:n,playbackUrl:`https://livepeercdn.com/hls/${s}/index.m3u8`,playbackId:s,createdAt:i,status:o?"active":"inactive"}}}),new Response(JSON.stringify({rtmpUrl:"rtmp://rtmp.livepeer.com/live",streamId:t,streamKey:n,playbackUrl:`https://livepeercdn.com/hls/${s}/index.m3u8`,createdAt:i,status:o?"active":"inactive",playbackId:s}),{status:200})}catch(e){return console.error("Error creating stream:",e),new Response(JSON.stringify({error:e.message}),{status:500})}}let m=new n.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/create-stream/route",pathname:"/api/create-stream",filename:"route",bundlePath:"app/api/create-stream/route"},resolvedPagePath:"D:\\Blive Update\\Frontend\\myapp\\app\\api\\create-stream\\route.js",nextConfigOutput:"",userland:a}),{requestAsyncStorage:g,staticGenerationAsyncStorage:v,serverHooks:h}=m,y="/api/create-stream/route";function S(){return(0,i.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:v})}},4191:(e,t,r)=>{r.d(t,{Z:()=>c});var a=r(1185),n=r.n(a);let s=process.env.MONGODB_URI;if(!s)throw Error("Please define the MONGODB_URI environment variable inside .env.local");let i=null,o=null,c=async function(){if(o)return console.log("Using cached database connection"),{client:i,db:o};console.log("Connecting to new database");try{let e=await n().connect(s,{useNewUrlParser:!0,useUnifiedTopology:!0});return i=e,o=e.connection.db,console.log("Database connection successful"),{client:e,db:o}}catch(e){throw console.error("Error connecting to the database:",e),e}}},3077:(e,t,r)=>{r.d(t,{Z:()=>i});var a=r(1185),n=r.n(a);let s=new(n()).Schema({address:{type:String,required:!0,unique:!0},userName:{type:String},emailId:{type:String,required:!0},fullName:{type:String,required:!0},streams:[{streamId:String,streamKey:String,playbackUrl:String,playbackId:String,createdAt:Date,status:String,streamTitle:String}]}),i=n().models.User||n().model("User",s)}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[948,164],()=>r(9073));module.exports=a})();